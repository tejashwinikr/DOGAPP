{"ast":null,"code":"import { performDraw, startSessionManagement } from '@datadog/browser-core';\nimport { LifeCycleEventType } from './lifeCycle';\nexport var RUM_SESSION_KEY = 'rum';\nexport var RumSessionPlan;\n\n(function (RumSessionPlan) {\n  RumSessionPlan[RumSessionPlan[\"LITE\"] = 1] = \"LITE\";\n  RumSessionPlan[RumSessionPlan[\"REPLAY\"] = 2] = \"REPLAY\";\n})(RumSessionPlan || (RumSessionPlan = {}));\n\nexport var RumTrackingType;\n\n(function (RumTrackingType) {\n  RumTrackingType[\"NOT_TRACKED\"] = \"0\"; // Note: the \"tracking type\" value (stored in the session cookie) does not match the \"session\n  // plan\" value (sent in RUM events). This is expected, and was done to keep retrocompatibility\n  // with active sessions when upgrading the SDK.\n\n  RumTrackingType[\"TRACKED_REPLAY\"] = \"1\";\n  RumTrackingType[\"TRACKED_LITE\"] = \"2\";\n})(RumTrackingType || (RumTrackingType = {}));\n\nexport function startRumSession(configuration, lifeCycle) {\n  var session = startSessionManagement(configuration.cookieOptions, RUM_SESSION_KEY, function (rawTrackingType) {\n    return computeSessionState(configuration, rawTrackingType);\n  });\n  session.renewObservable.subscribe(function () {\n    lifeCycle.notify(LifeCycleEventType.SESSION_EXPIRED);\n    lifeCycle.notify(LifeCycleEventType.SESSION_RENEWED);\n  });\n  return {\n    getId: session.getId,\n    isTracked: function isTracked() {\n      return isSessionTracked(session);\n    },\n    hasReplayPlan: function hasReplayPlan() {\n      return isSessionTracked(session) && session.getTrackingType() === RumTrackingType.TRACKED_REPLAY;\n    },\n    hasLitePlan: function hasLitePlan() {\n      return isSessionTracked(session) && session.getTrackingType() === RumTrackingType.TRACKED_LITE;\n    }\n  };\n}\n\nfunction isSessionTracked(session) {\n  return session.getId() !== undefined && isTypeTracked(session.getTrackingType());\n}\n\nfunction computeSessionState(configuration, rawTrackingType) {\n  var trackingType;\n\n  if (hasValidRumSession(rawTrackingType)) {\n    trackingType = rawTrackingType;\n  } else if (!performDraw(configuration.sampleRate)) {\n    trackingType = RumTrackingType.NOT_TRACKED;\n  } else if (!performDraw(configuration.replaySampleRate)) {\n    trackingType = RumTrackingType.TRACKED_LITE;\n  } else {\n    trackingType = RumTrackingType.TRACKED_REPLAY;\n  }\n\n  return {\n    trackingType: trackingType,\n    isTracked: isTypeTracked(trackingType)\n  };\n}\n\nfunction hasValidRumSession(trackingType) {\n  return trackingType === RumTrackingType.NOT_TRACKED || trackingType === RumTrackingType.TRACKED_REPLAY || trackingType === RumTrackingType.TRACKED_LITE;\n}\n\nfunction isTypeTracked(rumSessionType) {\n  return rumSessionType === RumTrackingType.TRACKED_LITE || rumSessionType === RumTrackingType.TRACKED_REPLAY;\n}","map":{"version":3,"mappings":"AAAA,SAAwBA,WAAxB,EAA8CC,sBAA9C,QAA4E,uBAA5E;AACA,SAAoBC,kBAApB,QAA8C,aAA9C;AAEA,OAAO,IAAMC,eAAe,GAAG,KAAxB;AASP,WAAYC,cAAZ;;AAAA,WAAYA,cAAZ,EAA0B;EACxBA;EACAA;AACD,CAHD,EAAYA,cAAc,KAAdA,cAAc,MAA1B;;AAKA,WAAYC,eAAZ;;AAAA,WAAYA,eAAZ,EAA2B;EACzBA,qCADyB,CAEzB;EACA;EACA;;EACAA;EACAA;AACD,CAPD,EAAYA,eAAe,KAAfA,eAAe,MAA3B;;AASA,OAAM,SAAUC,eAAV,CAA0BC,aAA1B,EAAwDC,SAAxD,EAA4E;EAChF,IAAMC,OAAO,GAAGR,sBAAsB,CAACM,aAAa,CAACG,aAAf,EAA8BP,eAA9B,EAA+C,UAACQ,eAAD,EAAgB;IACnG,0BAAmB,CAACJ,aAAD,EAAgBI,eAAhB,CAAnB;EAAmD,CADf,CAAtC;EAIAF,OAAO,CAACG,eAAR,CAAwBC,SAAxB,CAAkC;IAChCL,SAAS,CAACM,MAAV,CAAiBZ,kBAAkB,CAACa,eAApC;IACAP,SAAS,CAACM,MAAV,CAAiBZ,kBAAkB,CAACc,eAApC;EACD,CAHD;EAKA,OAAO;IACLC,KAAK,EAAER,OAAO,CAACQ,KADV;IAELC,SAAS,EAAE;MAAM,uBAAgB,CAACT,OAAD,CAAhB;IAAyB,CAFrC;IAGLU,aAAa,EAAE;MAAM,uBAAgB,CAACV,OAAD,CAAhB,IAA6BA,OAAO,CAACW,eAAR,OAA8Bf,eAAe,CAACgB,cAA3E;IAAyF,CAHzG;IAILC,WAAW,EAAE;MAAM,uBAAgB,CAACb,OAAD,CAAhB,IAA6BA,OAAO,CAACW,eAAR,OAA8Bf,eAAe,CAACkB,YAA3E;IAAuF;EAJrG,CAAP;AAMD;;AAED,SAASC,gBAAT,CAA0Bf,OAA1B,EAA2D;EACzD,OAAOA,OAAO,CAACQ,KAAR,OAAoBQ,SAApB,IAAiCC,aAAa,CAACjB,OAAO,CAACW,eAAR,EAAD,CAArD;AACD;;AAED,SAASO,mBAAT,CAA6BpB,aAA7B,EAA2DI,eAA3D,EAAmF;EACjF,IAAIiB,YAAJ;;EACA,IAAIC,kBAAkB,CAAClB,eAAD,CAAtB,EAAyC;IACvCiB,YAAY,GAAGjB,eAAf;EACD,CAFD,MAEO,IAAI,CAACX,WAAW,CAACO,aAAa,CAACuB,UAAf,CAAhB,EAA4C;IACjDF,YAAY,GAAGvB,eAAe,CAAC0B,WAA/B;EACD,CAFM,MAEA,IAAI,CAAC/B,WAAW,CAACO,aAAa,CAACyB,gBAAf,CAAhB,EAAkD;IACvDJ,YAAY,GAAGvB,eAAe,CAACkB,YAA/B;EACD,CAFM,MAEA;IACLK,YAAY,GAAGvB,eAAe,CAACgB,cAA/B;EACD;;EACD,OAAO;IACLO,YAAY,cADP;IAELV,SAAS,EAAEQ,aAAa,CAACE,YAAD;EAFnB,CAAP;AAID;;AAED,SAASC,kBAAT,CAA4BD,YAA5B,EAAiD;EAC/C,OACEA,YAAY,KAAKvB,eAAe,CAAC0B,WAAjC,IACAH,YAAY,KAAKvB,eAAe,CAACgB,cADjC,IAEAO,YAAY,KAAKvB,eAAe,CAACkB,YAHnC;AAKD;;AAED,SAASG,aAAT,CAAuBO,cAAvB,EAAkE;EAChE,OAAOA,cAAc,KAAK5B,eAAe,CAACkB,YAAnC,IAAmDU,cAAc,KAAK5B,eAAe,CAACgB,cAA7F;AACD","names":["performDraw","startSessionManagement","LifeCycleEventType","RUM_SESSION_KEY","RumSessionPlan","RumTrackingType","startRumSession","configuration","lifeCycle","session","cookieOptions","rawTrackingType","renewObservable","subscribe","notify","SESSION_EXPIRED","SESSION_RENEWED","getId","isTracked","hasReplayPlan","getTrackingType","TRACKED_REPLAY","hasLitePlan","TRACKED_LITE","isSessionTracked","undefined","isTypeTracked","computeSessionState","trackingType","hasValidRumSession","sampleRate","NOT_TRACKED","replaySampleRate","rumSessionType"],"sourceRoot":"","sources":["../../src/domain/rumSession.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}