{"ast":null,"code":"import { __assign } from \"tslib\";\nimport { computeStackTrace, formatUnknownError, ErrorSource, generateUUID, ErrorHandling, Observable, trackConsoleError, trackRuntimeError } from '@datadog/browser-core';\nimport { RumEventType } from '../../../rawRumEvent.types';\nimport { LifeCycleEventType } from '../../lifeCycle';\nexport function startErrorCollection(lifeCycle, foregroundContexts) {\n  var errorObservable = new Observable();\n  trackConsoleError(errorObservable);\n  trackRuntimeError(errorObservable);\n  errorObservable.subscribe(function (error) {\n    return lifeCycle.notify(LifeCycleEventType.RAW_ERROR_COLLECTED, {\n      error: error\n    });\n  });\n  return doStartErrorCollection(lifeCycle, foregroundContexts);\n}\nexport function doStartErrorCollection(lifeCycle, foregroundContexts) {\n  lifeCycle.subscribe(LifeCycleEventType.RAW_ERROR_COLLECTED, function (_a) {\n    var error = _a.error,\n        customerContext = _a.customerContext,\n        savedCommonContext = _a.savedCommonContext;\n    lifeCycle.notify(LifeCycleEventType.RAW_RUM_EVENT_COLLECTED, __assign({\n      customerContext: customerContext,\n      savedCommonContext: savedCommonContext\n    }, processError(error, foregroundContexts)));\n  });\n  return {\n    addError: function addError(_a, savedCommonContext) {\n      var error = _a.error,\n          handlingStack = _a.handlingStack,\n          startClocks = _a.startClocks,\n          customerContext = _a.context;\n      var rawError = computeRawError(error, handlingStack, startClocks);\n      lifeCycle.notify(LifeCycleEventType.RAW_ERROR_COLLECTED, {\n        customerContext: customerContext,\n        savedCommonContext: savedCommonContext,\n        error: rawError\n      });\n    }\n  };\n}\n\nfunction computeRawError(error, handlingStack, startClocks) {\n  var stackTrace = error instanceof Error ? computeStackTrace(error) : undefined;\n  return __assign(__assign({\n    startClocks: startClocks,\n    source: ErrorSource.CUSTOM,\n    originalError: error\n  }, formatUnknownError(stackTrace, error, 'Provided', handlingStack)), {\n    handling: ErrorHandling.HANDLED\n  });\n}\n\nfunction processError(error, foregroundContexts) {\n  var rawRumEvent = {\n    date: error.startClocks.timeStamp,\n    error: {\n      id: generateUUID(),\n      message: error.message,\n      resource: error.resource ? {\n        method: error.resource.method,\n        status_code: error.resource.statusCode,\n        url: error.resource.url\n      } : undefined,\n      source: error.source,\n      stack: error.stack,\n      handling_stack: error.handlingStack,\n      type: error.type,\n      handling: error.handling\n    },\n    type: RumEventType.ERROR\n  };\n  var inForeground = foregroundContexts.getInForeground(error.startClocks.relative);\n\n  if (inForeground !== undefined) {\n    rawRumEvent.view = {\n      in_foreground: inForeground\n    };\n  }\n\n  return {\n    rawRumEvent: rawRumEvent,\n    startTime: error.startClocks.relative,\n    domainContext: {\n      error: error.originalError\n    }\n  };\n}","map":{"version":3,"mappings":"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","names":["computeStackTrace","formatUnknownError","ErrorSource","generateUUID","ErrorHandling","Observable","trackConsoleError","trackRuntimeError","RumEventType","LifeCycleEventType","startErrorCollection","lifeCycle","foregroundContexts","errorObservable","subscribe","error","notify","RAW_ERROR_COLLECTED","doStartErrorCollection","_a","customerContext","savedCommonContext","RAW_RUM_EVENT_COLLECTED","__assign","processError","addError","handlingStack","startClocks","rawError","computeRawError","stackTrace","Error","undefined","source","CUSTOM","originalError","handling","HANDLED","rawRumEvent","date","timeStamp","id","message","resource","method","status_code","statusCode","url","stack","handling_stack","type","ERROR","inForeground","getInForeground","relative","view","in_foreground","startTime","domainContext"],"sourceRoot":"","sources":["../../../../src/domain/rumEventsCollection/error/errorCollection.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}