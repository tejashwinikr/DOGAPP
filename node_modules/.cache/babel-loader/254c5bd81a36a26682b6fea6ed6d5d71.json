{"ast":null,"code":"import { report } from './report';\nvar UNKNOWN_FUNCTION = '?';\n/**\n * computeStackTrace: cross-browser stack traces in JavaScript\n *\n * Syntax:\n * ```js\n * s = computeStackTraceOfCaller([depth])\n * s = computeStackTrace(exception) // consider using report instead (see below)\n * ```\n *\n * Supports:\n *   - Firefox:  full stack trace with line numbers and unreliable column\n *               number on top frame\n *   - Opera 10: full stack trace with line and column numbers\n *   - Opera 9-: full stack trace with line numbers\n *   - Chrome:   full stack trace with line and column numbers\n *   - Safari:   line and column number for the topmost stacktrace element\n *               only\n *   - IE:       no line numbers whatsoever\n *\n * Tries to guess names of anonymous functions by looking for assignments\n * in the source code. In IE and Safari, we have to guess source file names\n * by searching for function bodies inside all page scripts. This will not\n * work for scripts that are loaded cross-domain.\n * Here be dragons: some function names may be guessed incorrectly, and\n * duplicate functions may be mismatched.\n *\n * computeStackTrace should only be used for tracing purposes.\n * Logging of unhandled exceptions should be done with report,\n * which builds on top of computeStackTrace and provides better\n * IE support by utilizing the window.onerror event to retrieve information\n * about the top of the stack.\n *\n * Note: In IE and Safari, no stack trace is recorded on the Error object,\n * so computeStackTrace instead walks its *own* chain of callers.\n * This means that:\n *  * in Safari, some methods may be missing from the stack trace;\n *  * in IE, the topmost function in the stack trace will always be the\n *    caller of computeStackTrace.\n *\n * This is okay for tracing (because you are likely to be calling\n * computeStackTrace from the function you want to be the topmost element\n * of the stack trace anyway), but not okay for logging unhandled\n * exceptions (because your catch block will likely be far away from the\n * inner function that actually caused the exception).\n *\n * Tracing example:\n * ```js\n *     function trace(message) {\n *         let stackInfo = computeStackTrace.ofCaller();\n *         let data = message + \"\\n\";\n *         for(let i in stackInfo.stack) {\n *             let item = stackInfo.stack[i];\n *             data += (item.func || '[anonymous]') + \"() in \" + item.url + \":\" + (item.line || '0') + \"\\n\";\n *         }\n *         if (window.console)\n *             console.info(data);\n *         else\n *             alert(data);\n *     }\n * ```\n * @memberof TraceKit\n * @namespace\n */\n\n/**\n * Computes a stack trace for an exception.\n * @param {Error} ex\n * @param {(string|number)=} depth\n * @memberof computeStackTrace\n */\n\nexport function computeStackTrace(ex, depth) {\n  var stack;\n  var normalizedDepth = depth === undefined ? 0 : +depth;\n\n  try {\n    // This must be tried first because Opera 10 *destroys*\n    // its stacktrace property if you try to access the stack\n    // property first!!\n    stack = computeStackTraceFromStacktraceProp(ex);\n\n    if (stack) {\n      return stack;\n    }\n  } catch (e) {\n    if (debug) {\n      throw e;\n    }\n  }\n\n  try {\n    stack = computeStackTraceFromStackProp(ex);\n\n    if (stack) {\n      return stack;\n    }\n  } catch (e) {\n    if (debug) {\n      throw e;\n    }\n  }\n\n  try {\n    stack = computeStackTraceFromOperaMultiLineMessage(ex);\n\n    if (stack) {\n      return stack;\n    }\n  } catch (e) {\n    if (debug) {\n      throw e;\n    }\n  }\n\n  try {\n    stack = computeStackTraceByWalkingCallerChain(ex, normalizedDepth + 1);\n\n    if (stack) {\n      return stack;\n    }\n  } catch (e) {\n    if (debug) {\n      throw e;\n    }\n  }\n\n  return {\n    message: tryToGetString(ex, 'message'),\n    name: tryToGetString(ex, 'name'),\n    stack: []\n  };\n}\nvar debug = false; // Contents of Exception in various browsers.\n//\n// SAFARI:\n// ex.message = Can't find variable: qq\n// ex.line = 59\n// ex.sourceId = 580238192\n// ex.sourceURL = http://...\n// ex.expressionBeginOffset = 96\n// ex.expressionCaretOffset = 98\n// ex.expressionEndOffset = 98\n// ex.name = ReferenceError\n//\n// FIREFOX:\n// ex.message = qq is not defined\n// ex.fileName = http://...\n// ex.lineNumber = 59\n// ex.columnNumber = 69\n// ex.stack = ...stack trace... (see the example below)\n// ex.name = ReferenceError\n//\n// CHROME:\n// ex.message = qq is not defined\n// ex.name = ReferenceError\n// ex.type = not_defined\n// ex.arguments = ['aa']\n// ex.stack = ...stack trace...\n//\n// INTERNET EXPLORER:\n// ex.message = ...\n// ex.name = ReferenceError\n//\n// OPERA:\n// ex.message = ...message... (see the example below)\n// ex.name = ReferenceError\n// ex.opera#sourceloc = 11  (pretty much useless, duplicates the info in ex.message)\n// ex.stacktrace = n/a; see 'opera:config#UserPrefs|Exceptions Have Stacktrace'\n\n/**\n * Computes stack trace information from the stack property.\n * Chrome and Gecko use this property.\n * @param {Error} ex\n * @return {?StackTrace} Stack trace information.\n * @memberof computeStackTrace\n */\n\nexport function computeStackTraceFromStackProp(ex) {\n  var stacktrace = tryToGetString(ex, 'stack');\n\n  if (!stacktrace) {\n    return;\n  } // eslint-disable-next-line  max-len\n\n\n  var chrome = /^\\s*at (.*?) ?\\(((?:file|https?|blob|chrome-extension|native|eval|webpack|<anonymous>|\\/).*?)(?::(\\d+))?(?::(\\d+))?\\)?\\s*$/i; // eslint-disable-next-line  max-len\n\n  var gecko = /^\\s*(.*?)(?:\\((.*?)\\))?(?:^|@)((?:file|https?|blob|chrome|webpack|resource|capacitor|\\[native).*?|[^@]*bundle)(?::(\\d+))?(?::(\\d+))?\\s*$/i; // eslint-disable-next-line  max-len\n\n  var winjs = /^\\s*at (?:((?:\\[object object\\])?.+) )?\\(?((?:file|ms-appx|https?|webpack|blob):.*?):(\\d+)(?::(\\d+))?\\)?\\s*$/i; // Used to additionally parse URL/line/column from eval frames\n\n  var isEval;\n  var geckoEval = /(\\S+) line (\\d+)(?: > eval line \\d+)* > eval/i;\n  var chromeEval = /\\((\\S*)(?::(\\d+))(?::(\\d+))\\)/;\n  var lines = stacktrace.split('\\n');\n  var stack = [];\n  var submatch;\n  var parts;\n  var element;\n\n  for (var i = 0, j = lines.length; i < j; i += 1) {\n    if (chrome.exec(lines[i])) {\n      parts = chrome.exec(lines[i]);\n      var isNative = parts[2] && parts[2].indexOf('native') === 0; // start of line\n\n      isEval = parts[2] && parts[2].indexOf('eval') === 0; // start of line\n\n      submatch = chromeEval.exec(parts[2]);\n\n      if (isEval && submatch) {\n        // throw out eval line/column and use top-most line/column number\n        parts[2] = submatch[1]; // url\n\n        parts[3] = submatch[2]; // line\n\n        parts[4] = submatch[3]; // column\n      }\n\n      element = {\n        args: isNative ? [parts[2]] : [],\n        column: parts[4] ? +parts[4] : undefined,\n        func: parts[1] || UNKNOWN_FUNCTION,\n        line: parts[3] ? +parts[3] : undefined,\n        url: !isNative ? parts[2] : undefined\n      };\n    } else if (winjs.exec(lines[i])) {\n      parts = winjs.exec(lines[i]);\n      element = {\n        args: [],\n        column: parts[4] ? +parts[4] : undefined,\n        func: parts[1] || UNKNOWN_FUNCTION,\n        line: +parts[3],\n        url: parts[2]\n      };\n    } else if (gecko.exec(lines[i])) {\n      parts = gecko.exec(lines[i]);\n      isEval = parts[3] && parts[3].indexOf(' > eval') > -1;\n      submatch = geckoEval.exec(parts[3]);\n\n      if (isEval && submatch) {\n        // throw out eval line/column and use top-most line number\n        parts[3] = submatch[1];\n        parts[4] = submatch[2];\n        parts[5] = undefined; // no column when eval\n      } else if (i === 0 && !parts[5] && !isUndefined(ex.columnNumber)) {\n        // FireFox uses this awesome columnNumber property for its top frame\n        // Also note, Firefox's column number is 0-based and everything else expects 1-based,\n        // so adding 1\n        // NOTE: this hack doesn't work if top-most frame is eval\n        stack[0].column = ex.columnNumber + 1;\n      }\n\n      element = {\n        args: parts[2] ? parts[2].split(',') : [],\n        column: parts[5] ? +parts[5] : undefined,\n        func: parts[1] || UNKNOWN_FUNCTION,\n        line: parts[4] ? +parts[4] : undefined,\n        url: parts[3]\n      };\n    } else {\n      continue;\n    }\n\n    if (!element.func && element.line) {\n      element.func = UNKNOWN_FUNCTION;\n    }\n\n    stack.push(element);\n  }\n\n  if (!stack.length) {\n    return;\n  }\n\n  return {\n    stack: stack,\n    message: tryToGetString(ex, 'message'),\n    name: tryToGetString(ex, 'name')\n  };\n}\n/**\n * Computes stack trace information from the stacktrace property.\n * Opera 10+ uses this property.\n * @param {Error} ex\n * @return {?StackTrace} Stack trace information.\n * @memberof computeStackTrace\n */\n\nfunction computeStackTraceFromStacktraceProp(ex) {\n  // Access and store the stacktrace property before doing ANYTHING\n  // else to it because Opera is not very good at providing it\n  // reliably in other circumstances.\n  var stacktrace = tryToGetString(ex, 'stacktrace');\n\n  if (!stacktrace) {\n    return;\n  }\n\n  var opera10Regex = / line (\\d+).*script (?:in )?(\\S+)(?:: in function (\\S+))?$/i; // eslint-disable-next-line  max-len\n\n  var opera11Regex = / line (\\d+), column (\\d+)\\s*(?:in (?:<anonymous function: ([^>]+)>|([^\\)]+))\\((.*)\\))? in (.*):\\s*$/i;\n  var lines = stacktrace.split('\\n');\n  var stack = [];\n  var parts;\n\n  for (var line = 0; line < lines.length; line += 2) {\n    var element = void 0;\n\n    if (opera10Regex.exec(lines[line])) {\n      parts = opera10Regex.exec(lines[line]);\n      element = {\n        args: [],\n        column: undefined,\n        func: parts[3],\n        line: +parts[1],\n        url: parts[2]\n      };\n    } else if (opera11Regex.exec(lines[line])) {\n      parts = opera11Regex.exec(lines[line]);\n      element = {\n        args: parts[5] ? parts[5].split(',') : [],\n        column: +parts[2],\n        func: parts[3] || parts[4],\n        line: +parts[1],\n        url: parts[6]\n      };\n    }\n\n    if (element) {\n      if (!element.func && element.line) {\n        element.func = UNKNOWN_FUNCTION;\n      }\n\n      element.context = [lines[line + 1]];\n      stack.push(element);\n    }\n  }\n\n  if (!stack.length) {\n    return;\n  }\n\n  return {\n    stack: stack,\n    message: tryToGetString(ex, 'message'),\n    name: tryToGetString(ex, 'name')\n  };\n}\n/**\n * NOT TESTED.\n * Computes stack trace information from an error message that includes\n * the stack trace.\n * Opera 9 and earlier use this method if the option to show stack\n * traces is turned on in opera:config.\n * @param {Error} ex\n * @return {?StackTrace} Stack information.\n * @memberof computeStackTrace\n */\n\n\nfunction computeStackTraceFromOperaMultiLineMessage(ex) {\n  // TODO: Clean this function up\n  // Opera includes a stack trace into the exception message. An example is:\n  //\n  // Statement on line 3: Undefined variable: undefinedFunc\n  // Backtrace:\n  //   Line 3 of linked script file://localhost/Users/andreyvit/Projects/TraceKit/javascript-client/sample.js:\n  //   In function zzz\n  //         undefinedFunc(a);\n  //   Line 7 of inline#1 script in file://localhost/Users/andreyvit/Projects/TraceKit/javascript-client/sample.html:\n  //   In function yyy\n  //           zzz(x, y, z);\n  //   Line 3 of inline#1 script in file://localhost/Users/andreyvit/Projects/TraceKit/javascript-client/sample.html:\n  //   In function xxx\n  //           yyy(a, a, a);\n  //   Line 1 of function script\n  //     try { xxx('hi'); return false; } catch(ex) { report(ex); }\n  //   ...\n  var message = tryToGetString(ex, 'message');\n\n  if (!message) {\n    return;\n  }\n\n  var lines = message.split('\\n');\n\n  if (lines.length < 4) {\n    return;\n  }\n\n  var lineRE1 = /^\\s*Line (\\d+) of linked script ((?:file|https?|blob)\\S+)(?:: in function (\\S+))?\\s*$/i;\n  var lineRE2 = /^\\s*Line (\\d+) of inline#(\\d+) script in ((?:file|https?|blob)\\S+)(?:: in function (\\S+))?\\s*$/i;\n  var lineRE3 = /^\\s*Line (\\d+) of function script\\s*$/i;\n  var stack = [];\n  var scripts = window && window.document && window.document.getElementsByTagName('script');\n  var inlineScriptBlocks = [];\n  var parts;\n\n  for (var s in scripts) {\n    if (has(scripts, s) && !scripts[s].src) {\n      inlineScriptBlocks.push(scripts[s]);\n    }\n  }\n\n  for (var line = 2; line < lines.length; line += 2) {\n    var item = void 0;\n\n    if (lineRE1.exec(lines[line])) {\n      parts = lineRE1.exec(lines[line]);\n      item = {\n        args: [],\n        column: undefined,\n        func: parts[3],\n        line: +parts[1],\n        url: parts[2]\n      };\n    } else if (lineRE2.exec(lines[line])) {\n      parts = lineRE2.exec(lines[line]);\n      item = {\n        args: [],\n        column: undefined,\n        func: parts[4],\n        line: +parts[1],\n        url: parts[3]\n      };\n    } else if (lineRE3.exec(lines[line])) {\n      parts = lineRE3.exec(lines[line]);\n      var url = window.location.href.replace(/#.*$/, '');\n      item = {\n        url: url,\n        args: [],\n        column: undefined,\n        func: '',\n        line: +parts[1]\n      };\n    }\n\n    if (item) {\n      if (!item.func) {\n        item.func = UNKNOWN_FUNCTION;\n      }\n\n      item.context = [lines[line + 1]];\n      stack.push(item);\n    }\n  }\n\n  if (!stack.length) {\n    return; // could not parse multiline exception message as Opera stack trace\n  }\n\n  return {\n    stack: stack,\n    message: lines[0],\n    name: tryToGetString(ex, 'name')\n  };\n}\n/**\n * Adds information about the first frame to incomplete stack traces.\n * Safari and IE require this to get complete data on the first frame.\n * @param {StackTrace} stackInfo Stack trace information from\n * one of the compute* methods.\n * @param {string=} url The URL of the script that caused an error.\n * @param {(number|string)=} lineNo The line number of the script that\n * caused an error.\n * @param {string=} message The error generated by the browser, which\n * hopefully contains the name of the object that caused the error.\n * @return {boolean} Whether or not the stack information was\n * augmented.\n * @memberof computeStackTrace\n */\n\n\nexport function augmentStackTraceWithInitialElement(stackInfo, url, lineNo) {\n  var initial = {\n    url: url,\n    line: lineNo ? +lineNo : undefined\n  };\n\n  if (initial.url && initial.line) {\n    stackInfo.incomplete = false;\n    var stack = stackInfo.stack;\n\n    if (stack.length > 0) {\n      if (stack[0].url === initial.url) {\n        if (stack[0].line === initial.line) {\n          return false; // already in stack trace\n        }\n\n        if (!stack[0].line && stack[0].func === initial.func) {\n          stack[0].line = initial.line;\n          stack[0].context = initial.context;\n          return false;\n        }\n      }\n    }\n\n    stack.unshift(initial);\n    stackInfo.partial = true;\n    return true;\n  }\n\n  stackInfo.incomplete = true;\n  return false;\n}\n/**\n * Computes stack trace information by walking the arguments.caller\n * chain at the time the exception occurred. This will cause earlier\n * frames to be missed but is the only way to get any stack trace in\n * Safari and IE. The top frame is restored by\n * {@link augmentStackTraceWithInitialElement}.\n * @param {Error} ex\n * @param {number} depth\n * @return {StackTrace} Stack trace information.\n * @memberof computeStackTrace\n */\n\nfunction computeStackTraceByWalkingCallerChain(ex, depth) {\n  var functionName = /function\\s+([_$a-zA-Z\\xA0-\\uFFFF][_$a-zA-Z0-9\\xA0-\\uFFFF]*)?\\s*\\(/i;\n  var stack = [];\n  var funcs = {};\n  var recursion = false;\n  var parts;\n  var item;\n\n  for (var curr = computeStackTraceByWalkingCallerChain.caller; curr && !recursion; curr = curr.caller) {\n    if (curr === computeStackTrace || curr === report) {\n      continue;\n    }\n\n    item = {\n      args: [],\n      column: undefined,\n      func: UNKNOWN_FUNCTION,\n      line: undefined,\n      url: undefined\n    };\n    parts = functionName.exec(curr.toString());\n\n    if (curr.name) {\n      item.func = curr.name;\n    } else if (parts) {\n      item.func = parts[1];\n    }\n\n    if (typeof item.func === 'undefined') {\n      item.func = parts ? parts.input.substring(0, parts.input.indexOf('{')) : undefined;\n    }\n\n    if (funcs[curr.toString()]) {\n      recursion = true;\n    } else {\n      funcs[curr.toString()] = true;\n    }\n\n    stack.push(item);\n  }\n\n  if (depth) {\n    stack.splice(0, depth);\n  }\n\n  var result = {\n    stack: stack,\n    message: tryToGetString(ex, 'message'),\n    name: tryToGetString(ex, 'name')\n  };\n  augmentStackTraceWithInitialElement(result, tryToGetString(ex, 'sourceURL') || tryToGetString(ex, 'fileName'), tryToGetString(ex, 'line') || tryToGetString(ex, 'lineNumber'));\n  return result;\n}\n\nfunction tryToGetString(candidate, property) {\n  if (typeof candidate !== 'object' || !candidate || !(property in candidate)) {\n    return undefined;\n  }\n\n  var value = candidate[property];\n  return typeof value === 'string' ? value : undefined;\n}\n/**\n * Logs a stacktrace starting from the previous call and working down.\n * @param {(number|string)=} depth How many frames deep to trace.\n * @return {StackTrace} Stack trace information.\n * @memberof computeStackTrace\n */\n\n\nexport function computeStackTraceOfCaller(depth) {\n  var currentDepth = (depth === undefined ? 0 : +depth) + 1; // \"+ 1\" because \"ofCaller\" should drop one frame\n\n  try {\n    throw new Error();\n  } catch (ex) {\n    return computeStackTrace(ex, currentDepth + 1);\n  }\n}\n/**\n * A better form of hasOwnProperty<br/>\n * Example: `has(MainHostObject, property) === true/false`\n *\n * @param {Object} object to check property\n * @param {string} key to check\n * @return {Boolean} true if the object has the key and it is not inherited\n */\n\nfunction has(object, key) {\n  return Object.prototype.hasOwnProperty.call(object, key);\n}\n/**\n * Returns true if the parameter is undefined<br/>\n * Example: `isUndefined(val) === true/false`\n *\n * @param {*} what Value to check\n * @return {Boolean} true if undefined and false otherwise\n */\n\n\nfunction isUndefined(what) {\n  return typeof what === 'undefined';\n}","map":{"version":3,"mappings":"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","names":["report","UNKNOWN_FUNCTION","computeStackTrace","ex","depth","stack","normalizedDepth","undefined","computeStackTraceFromStacktraceProp","e","debug","computeStackTraceFromStackProp","computeStackTraceFromOperaMultiLineMessage","computeStackTraceByWalkingCallerChain","message","tryToGetString","name","stacktrace","chrome","gecko","winjs","isEval","geckoEval","chromeEval","lines","split","submatch","parts","element","i","j","length","exec","isNative","indexOf","args","column","func","line","url","isUndefined","columnNumber","push","opera10Regex","opera11Regex","context","lineRE1","lineRE2","lineRE3","scripts","window","document","getElementsByTagName","inlineScriptBlocks","s","has","src","item","location","href","replace","augmentStackTraceWithInitialElement","stackInfo","lineNo","initial","incomplete","unshift","partial","functionName","funcs","recursion","curr","caller","toString","input","substring","splice","result","candidate","property","value","computeStackTraceOfCaller","currentDepth","Error","object","key","Object","prototype","hasOwnProperty","call","what"],"sourceRoot":"","sources":["../../../src/domain/tracekit/computeStackTrace.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}