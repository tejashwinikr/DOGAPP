{"ast":null,"code":"import { __assign } from \"tslib\";\nimport { NodePrivacyLevel, PRIVACY_ATTR_NAME, PRIVACY_ATTR_VALUE_HIDDEN, CENSORED_STRING_MARK, CENSORED_IMG_MARK } from '../../constants';\nimport { getTextContent, shouldMaskNode, reducePrivacyLevel, getNodeSelfPrivacyLevel, MAX_ATTRIBUTE_VALUE_CHAR_LENGTH } from './privacy';\nimport { NodeType } from './types';\nimport { makeStylesheetUrlsAbsolute, getSerializedNodeId, setSerializedNode, getElementInputValue, makeSrcsetUrlsAbsolute, makeUrlAbsolute } from './serializationUtils';\nimport { forEach } from './utils';\nexport function serializeDocument(document, initialPrivacyLevel) {\n  // We are sure that Documents are never ignored, so this function never returns null\n  return serializeNodeWithId(document, {\n    document: document,\n    parentNodePrivacyLevel: initialPrivacyLevel\n  });\n}\nexport function serializeNodeWithId(node, options) {\n  var serializedNode = serializeNode(node, options);\n\n  if (!serializedNode) {\n    return null;\n  } // Try to reuse the previous id\n\n\n  var id = getSerializedNodeId(node) || generateNextId();\n  var serializedNodeWithId = serializedNode;\n  serializedNodeWithId.id = id;\n  setSerializedNode(node, serializedNodeWithId);\n\n  if (options.serializedNodeIds) {\n    options.serializedNodeIds.add(id);\n  }\n\n  return serializedNodeWithId;\n}\n\nfunction serializeNode(node, options) {\n  switch (node.nodeType) {\n    case node.DOCUMENT_NODE:\n      return serializeDocumentNode(node, options);\n\n    case node.DOCUMENT_TYPE_NODE:\n      return serializeDocumentTypeNode(node);\n\n    case node.ELEMENT_NODE:\n      return serializeElementNode(node, options);\n\n    case node.TEXT_NODE:\n      return serializeTextNode(node, options);\n\n    case node.CDATA_SECTION_NODE:\n      return serializeCDataNode();\n  }\n}\n\nexport function serializeDocumentNode(document, options) {\n  return {\n    type: NodeType.Document,\n    childNodes: serializeChildNodes(document, options)\n  };\n}\n\nfunction serializeDocumentTypeNode(documentType) {\n  return {\n    type: NodeType.DocumentType,\n    name: documentType.name,\n    publicId: documentType.publicId,\n    systemId: documentType.systemId\n  };\n}\n/**\n * Serialzing Element nodes involves capturing:\n * 1. HTML ATTRIBUTES:\n * 2. JS STATE:\n * - scroll offsets\n * - Form fields (input value, checkbox checked, otpion selection, range)\n * - Canvas state,\n * - Media (video/audio) play mode + currentTime\n * - iframe contents\n * - webcomponents\n * 3. CUSTOM PROPERTIES:\n * - height+width for when `hidden` to cover the element\n * 4. EXCLUDED INTERACTION STATE:\n * - focus (possible, but not worth perf impact)\n * - hover (tracked only via mouse activity)\n * - fullscreen mode\n */\n\n\nexport function serializeElementNode(element, options) {\n  var _a;\n\n  var tagName = getValidTagName(element.tagName);\n  var isSVG = isSVGElement(element) || undefined; // For performance reason, we don't use getNodePrivacyLevel directly: we leverage the\n  // parentNodePrivacyLevel option to avoid iterating over all parents\n\n  var nodePrivacyLevel = reducePrivacyLevel(getNodeSelfPrivacyLevel(element), options.parentNodePrivacyLevel);\n\n  if (nodePrivacyLevel === NodePrivacyLevel.HIDDEN) {\n    var _b = element.getBoundingClientRect(),\n        width = _b.width,\n        height = _b.height;\n\n    return {\n      type: NodeType.Element,\n      tagName: tagName,\n      attributes: (_a = {\n        rr_width: width + \"px\",\n        rr_height: height + \"px\"\n      }, _a[PRIVACY_ATTR_NAME] = PRIVACY_ATTR_VALUE_HIDDEN, _a),\n      childNodes: [],\n      isSVG: isSVG\n    };\n  } // Ignore Elements like Script and some Link, Metas\n\n\n  if (nodePrivacyLevel === NodePrivacyLevel.IGNORE) {\n    return;\n  }\n\n  var attributes = getAttributesForPrivacyLevel(element, nodePrivacyLevel);\n  var childNodes = [];\n\n  if (element.childNodes.length) {\n    // OBJECT POOLING OPTIMIZATION:\n    // We should not create a new object systematically as it could impact performances. Try to reuse\n    // the same object as much as possible, and clone it only if we need to.\n    var childNodesSerializationOptions = void 0;\n\n    if (options.parentNodePrivacyLevel === nodePrivacyLevel && options.ignoreWhiteSpace === (tagName === 'head')) {\n      childNodesSerializationOptions = options;\n    } else {\n      childNodesSerializationOptions = __assign(__assign({}, options), {\n        parentNodePrivacyLevel: nodePrivacyLevel,\n        ignoreWhiteSpace: tagName === 'head'\n      });\n    }\n\n    childNodes = serializeChildNodes(element, childNodesSerializationOptions);\n  }\n\n  return {\n    type: NodeType.Element,\n    tagName: tagName,\n    attributes: attributes,\n    childNodes: childNodes,\n    isSVG: isSVG\n  };\n}\n/**\n * TODO: Preserve CSS element order, and record the presence of the tag, just don't render\n * We don't need this logic on the recorder side.\n * For security related meta's, customer can mask themmanually given they\n * are easy to identify in the HEAD tag.\n */\n\nexport function shouldIgnoreElement(element) {\n  if (element.nodeName === 'SCRIPT') {\n    return true;\n  }\n\n  if (element.nodeName === 'LINK') {\n    var relAttribute = getLowerCaseAttribute('rel');\n    return (// Scripts\n      relAttribute === 'preload' && getLowerCaseAttribute('as') === 'script' || // Favicons\n      relAttribute === 'shortcut icon' || relAttribute === 'icon'\n    );\n  }\n\n  if (element.nodeName === 'META') {\n    var nameAttribute = getLowerCaseAttribute('name');\n    var relAttribute = getLowerCaseAttribute('rel');\n    var propertyAttribute = getLowerCaseAttribute('property');\n    return (// Favicons\n      /^msapplication-tile(image|color)$/.test(nameAttribute) || nameAttribute === 'application-name' || relAttribute === 'icon' || relAttribute === 'apple-touch-icon' || relAttribute === 'shortcut icon' || // Description\n      nameAttribute === 'keywords' || nameAttribute === 'description' || // Social\n      /^(og|twitter|fb):/.test(propertyAttribute) || /^(og|twitter):/.test(nameAttribute) || nameAttribute === 'pinterest' || // Robots\n      nameAttribute === 'robots' || nameAttribute === 'googlebot' || nameAttribute === 'bingbot' || // Http headers. Ex: X-UA-Compatible, Content-Type, Content-Language, cache-control,\n      // X-Translated-By\n      element.hasAttribute('http-equiv') || // Authorship\n      nameAttribute === 'author' || nameAttribute === 'generator' || nameAttribute === 'framework' || nameAttribute === 'publisher' || nameAttribute === 'progid' || /^article:/.test(propertyAttribute) || /^product:/.test(propertyAttribute) || // Verification\n      nameAttribute === 'google-site-verification' || nameAttribute === 'yandex-verification' || nameAttribute === 'csrf-token' || nameAttribute === 'p:domain_verify' || nameAttribute === 'verify-v1' || nameAttribute === 'verification' || nameAttribute === 'shopify-checkout-api-token'\n    );\n  }\n\n  function getLowerCaseAttribute(name) {\n    return (element.getAttribute(name) || '').toLowerCase();\n  }\n\n  return false;\n}\n/**\n * Text Nodes are dependant on Element nodes\n * Privacy levels are set on elements so we check the parentElement of a text node\n * for privacy level.\n */\n\nfunction serializeTextNode(textNode, options) {\n  var _a; // The parent node may not be a html element which has a tagName attribute.\n  // So just let it be undefined which is ok in this use case.\n\n\n  var parentTagName = (_a = textNode.parentElement) === null || _a === void 0 ? void 0 : _a.tagName;\n  var textContent = getTextContent(textNode, options.ignoreWhiteSpace || false, options.parentNodePrivacyLevel);\n\n  if (!textContent) {\n    return;\n  }\n\n  return {\n    type: NodeType.Text,\n    textContent: textContent,\n    isStyle: parentTagName === 'STYLE' ? true : undefined\n  };\n}\n\nfunction serializeCDataNode() {\n  return {\n    type: NodeType.CDATA,\n    textContent: ''\n  };\n}\n\nexport function serializeChildNodes(node, options) {\n  var result = [];\n  forEach(node.childNodes, function (childNode) {\n    var serializedChildNode = serializeNodeWithId(childNode, options);\n\n    if (serializedChildNode) {\n      result.push(serializedChildNode);\n    }\n  });\n  return result;\n}\nexport function serializeAttribute(element, nodePrivacyLevel, attributeName) {\n  var _a, _b, _c;\n\n  if (nodePrivacyLevel === NodePrivacyLevel.HIDDEN) {\n    // dup condition for direct access case\n    return null;\n  }\n\n  var attributeValue = element.getAttribute(attributeName);\n\n  if (nodePrivacyLevel === NodePrivacyLevel.MASK) {\n    var tagName = element.tagName;\n\n    switch (attributeName) {\n      // Mask Attribute text content\n      case 'title':\n      case 'alt':\n        return CENSORED_STRING_MARK;\n    } // mask image URLs\n\n\n    if (tagName === 'IMG' || tagName === 'SOURCE') {\n      if (attributeName === 'src' || attributeName === 'srcset') {\n        return CENSORED_IMG_MARK;\n      }\n    } // mask <a> URLs\n\n\n    if (tagName === 'A' && attributeName === 'href') {\n      return CENSORED_STRING_MARK;\n    } // mask data-* attributes\n\n\n    if (attributeValue && attributeName.indexOf('data-') === 0 && attributeName !== PRIVACY_ATTR_NAME) {\n      // Exception: it's safe to reveal the `${PRIVACY_ATTR_NAME}` attr\n      return CENSORED_STRING_MARK;\n    }\n  }\n\n  if (!attributeValue || typeof attributeValue !== 'string') {\n    return attributeValue;\n  } // Minimum Fix for customer.\n\n\n  if (attributeValue.length > MAX_ATTRIBUTE_VALUE_CHAR_LENGTH && attributeValue.slice(0, 5) === 'data:') {\n    return 'data:truncated';\n  } // Rebuild absolute URLs from relative (without using <base> tag)\n\n\n  var doc = element.ownerDocument;\n\n  switch (attributeName) {\n    case 'src':\n    case 'href':\n      return makeUrlAbsolute(attributeValue, (_a = doc.location) === null || _a === void 0 ? void 0 : _a.href);\n\n    case 'srcset':\n      return makeSrcsetUrlsAbsolute(attributeValue, (_b = doc.location) === null || _b === void 0 ? void 0 : _b.href);\n\n    case 'style':\n      return makeStylesheetUrlsAbsolute(attributeValue, (_c = doc.location) === null || _c === void 0 ? void 0 : _c.href);\n\n    default:\n      return attributeValue;\n  }\n}\nvar _nextId = 1;\n\nfunction generateNextId() {\n  return _nextId++;\n}\n\nvar TAG_NAME_REGEX = /[^a-z1-6-_]/;\n\nfunction getValidTagName(tagName) {\n  var processedTagName = tagName.toLowerCase().trim();\n\n  if (TAG_NAME_REGEX.test(processedTagName)) {\n    // if the tag name is odd and we cannot extract\n    // anything from the string, then we return a\n    // generic div\n    return 'div';\n  }\n\n  return processedTagName;\n}\n\nfunction getCssRulesString(s) {\n  try {\n    var rules = s.rules || s.cssRules;\n    return rules ? Array.from(rules).map(getCssRuleString).join('') : null;\n  } catch (error) {\n    return null;\n  }\n}\n\nfunction getCssRuleString(rule) {\n  return isCSSImportRule(rule) ? getCssRulesString(rule.styleSheet) || '' : rule.cssText;\n}\n\nfunction isCSSImportRule(rule) {\n  return 'styleSheet' in rule;\n}\n\nfunction isSVGElement(el) {\n  return el.tagName === 'svg' || el instanceof SVGElement;\n}\n\nfunction getAttributesForPrivacyLevel(element, nodePrivacyLevel) {\n  if (nodePrivacyLevel === NodePrivacyLevel.HIDDEN) {\n    return {};\n  }\n\n  var safeAttrs = {};\n  var tagName = getValidTagName(element.tagName);\n  var doc = element.ownerDocument;\n\n  for (var i = 0; i < element.attributes.length; i += 1) {\n    var attribute = element.attributes.item(i);\n    var attributeName = attribute.name;\n    var attributeValue = serializeAttribute(element, nodePrivacyLevel, attributeName);\n\n    if (attributeValue !== null) {\n      safeAttrs[attributeName] = attributeValue;\n    }\n  }\n\n  if (element.value && (tagName === 'textarea' || tagName === 'select' || tagName === 'option' || tagName === 'input')) {\n    var formValue = getElementInputValue(element, nodePrivacyLevel);\n\n    if (formValue !== undefined) {\n      safeAttrs.value = formValue;\n    }\n  }\n  /**\n   * <Option> can be selected, which occurs if its `value` matches ancestor `<Select>.value`\n   */\n\n\n  if (tagName === 'option' && nodePrivacyLevel === NodePrivacyLevel.ALLOW) {\n    // For privacy=`MASK`, all the values would be the same, so skip.\n    var optionElement = element;\n\n    if (optionElement.selected) {\n      safeAttrs.selected = optionElement.selected;\n    }\n  } // remote css\n\n\n  if (tagName === 'link') {\n    var stylesheet = Array.from(doc.styleSheets).find(function (s) {\n      return s.href === element.href;\n    });\n    var cssText = getCssRulesString(stylesheet);\n\n    if (cssText && stylesheet) {\n      delete safeAttrs.rel;\n      delete safeAttrs.href;\n      safeAttrs._cssText = makeStylesheetUrlsAbsolute(cssText, stylesheet.href);\n    }\n  } // dynamic stylesheet\n\n\n  if (tagName === 'style' && element.sheet && // TODO: Currently we only try to get dynamic stylesheet when it is an empty style element\n  !(element.innerText || element.textContent || '').trim().length) {\n    var cssText = getCssRulesString(element.sheet);\n\n    if (cssText) {\n      safeAttrs._cssText = makeStylesheetUrlsAbsolute(cssText, location.href);\n    }\n  }\n  /**\n   * Forms: input[type=checkbox,radio]\n   * The `checked` property for <input> is a little bit special:\n   * 1. el.checked is a setter that returns if truthy.\n   * 2. getAttribute returns the string value\n   * getAttribute('checked') does not sync with `Element.checked`, so use JS property\n   * NOTE: `checked` property exists on `HTMLInputElement`. For serializer assumptions, we check for type=radio|check.\n   */\n\n\n  var inputElement = element;\n\n  if (tagName === 'input' && (inputElement.type === 'radio' || inputElement.type === 'checkbox')) {\n    if (nodePrivacyLevel === NodePrivacyLevel.ALLOW) {\n      safeAttrs.checked = !!inputElement.checked;\n    } else if (shouldMaskNode(inputElement, nodePrivacyLevel)) {\n      safeAttrs.checked = CENSORED_STRING_MARK;\n    }\n  }\n  /**\n   * Serialize the media playback state\n   */\n\n\n  if (tagName === 'audio' || tagName === 'video') {\n    var mediaElement = element;\n    safeAttrs.rr_mediaState = mediaElement.paused ? 'paused' : 'played';\n  }\n  /**\n   * Serialize the scroll state for each element\n   */\n\n\n  if (element.scrollLeft) {\n    safeAttrs.rr_scrollLeft = Math.round(element.scrollLeft);\n  }\n\n  if (element.scrollTop) {\n    safeAttrs.rr_scrollTop = Math.round(element.scrollTop);\n  }\n\n  return safeAttrs;\n}","map":{"version":3,"mappings":"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","names":["NodePrivacyLevel","PRIVACY_ATTR_NAME","PRIVACY_ATTR_VALUE_HIDDEN","CENSORED_STRING_MARK","CENSORED_IMG_MARK","getTextContent","shouldMaskNode","reducePrivacyLevel","getNodeSelfPrivacyLevel","MAX_ATTRIBUTE_VALUE_CHAR_LENGTH","NodeType","makeStylesheetUrlsAbsolute","getSerializedNodeId","setSerializedNode","getElementInputValue","makeSrcsetUrlsAbsolute","makeUrlAbsolute","forEach","serializeDocument","document","initialPrivacyLevel","serializeNodeWithId","parentNodePrivacyLevel","node","options","serializedNode","serializeNode","id","generateNextId","serializedNodeWithId","serializedNodeIds","add","nodeType","DOCUMENT_NODE","serializeDocumentNode","DOCUMENT_TYPE_NODE","serializeDocumentTypeNode","ELEMENT_NODE","serializeElementNode","TEXT_NODE","serializeTextNode","CDATA_SECTION_NODE","serializeCDataNode","type","Document","childNodes","serializeChildNodes","documentType","DocumentType","name","publicId","systemId","element","tagName","getValidTagName","isSVG","isSVGElement","undefined","nodePrivacyLevel","HIDDEN","getBoundingClientRect","width","height","Element","attributes","rr_width","rr_height","_a","IGNORE","getAttributesForPrivacyLevel","length","childNodesSerializationOptions","ignoreWhiteSpace","shouldIgnoreElement","nodeName","relAttribute","getLowerCaseAttribute","nameAttribute","propertyAttribute","test","hasAttribute","getAttribute","toLowerCase","textNode","parentTagName","parentElement","textContent","Text","isStyle","CDATA","result","childNode","serializedChildNode","push","serializeAttribute","attributeName","attributeValue","MASK","indexOf","slice","doc","ownerDocument","location","href","_b","_c","_nextId","TAG_NAME_REGEX","processedTagName","trim","getCssRulesString","s","rules","cssRules","Array","from","map","getCssRuleString","join","error","rule","isCSSImportRule","styleSheet","cssText","el","SVGElement","safeAttrs","i","attribute","item","value","formValue","ALLOW","optionElement","selected","stylesheet","styleSheets","find","rel","_cssText","sheet","innerText","inputElement","checked","mediaElement","rr_mediaState","paused","scrollLeft","rr_scrollLeft","Math","round","scrollTop","rr_scrollTop"],"sourceRoot":"","sources":["../../../src/domain/record/serialize.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}