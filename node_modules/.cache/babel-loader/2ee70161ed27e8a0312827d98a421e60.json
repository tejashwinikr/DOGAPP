{"ast":null,"code":"import { getLinkElementOrigin, getLocationOrigin } from './utils';\nexport function normalizeUrl(url) {\n  return buildUrl(url, getLocationOrigin()).href;\n}\nexport function isValidUrl(url) {\n  try {\n    return !!buildUrl(url);\n  } catch (_a) {\n    return false;\n  }\n}\nexport function haveSameOrigin(url1, url2) {\n  return getOrigin(url1) === getOrigin(url2);\n}\nexport function getOrigin(url) {\n  return getLinkElementOrigin(buildUrl(url));\n}\nexport function getPathName(url) {\n  var pathname = buildUrl(url).pathname;\n  return pathname[0] === '/' ? pathname : \"/\" + pathname;\n}\nexport function getSearch(url) {\n  return buildUrl(url).search;\n}\nexport function getHash(url) {\n  return buildUrl(url).hash;\n}\nexport function buildUrl(url, base) {\n  if (checkURLSupported()) {\n    return base !== undefined ? new URL(url, base) : new URL(url);\n  }\n\n  if (base === undefined && !/:/.test(url)) {\n    throw new Error(\"Invalid URL: '\" + url + \"'\");\n  }\n\n  var doc = document;\n  var anchorElement = doc.createElement('a');\n\n  if (base !== undefined) {\n    doc = document.implementation.createHTMLDocument('');\n    var baseElement = doc.createElement('base');\n    baseElement.href = base;\n    doc.head.appendChild(baseElement);\n    doc.body.appendChild(anchorElement);\n  }\n\n  anchorElement.href = url;\n  return anchorElement;\n}\nvar isURLSupported;\n\nfunction checkURLSupported() {\n  if (isURLSupported !== undefined) {\n    return isURLSupported;\n  }\n\n  try {\n    var url = new URL('http://test/path');\n    isURLSupported = url.href === 'http://test/path';\n    return isURLSupported;\n  } catch (_a) {\n    isURLSupported = false;\n  }\n\n  return isURLSupported;\n}","map":{"version":3,"mappings":"AAAA,SAASA,oBAAT,EAA+BC,iBAA/B,QAAwD,SAAxD;AAEA,OAAM,SAAUC,YAAV,CAAuBC,GAAvB,EAAkC;EACtC,OAAOC,QAAQ,CAACD,GAAD,EAAMF,iBAAiB,EAAvB,CAAR,CAAmCI,IAA1C;AACD;AAED,OAAM,SAAUC,UAAV,CAAqBH,GAArB,EAAgC;EACpC,IAAI;IACF,OAAO,CAAC,CAACC,QAAQ,CAACD,GAAD,CAAjB;EACD,CAFD,CAEE,WAAM;IACN,OAAO,KAAP;EACD;AACF;AAED,OAAM,SAAUI,cAAV,CAAyBC,IAAzB,EAAuCC,IAAvC,EAAmD;EACvD,OAAOC,SAAS,CAACF,IAAD,CAAT,KAAoBE,SAAS,CAACD,IAAD,CAApC;AACD;AAED,OAAM,SAAUC,SAAV,CAAoBP,GAApB,EAA+B;EACnC,OAAOH,oBAAoB,CAACI,QAAQ,CAACD,GAAD,CAAT,CAA3B;AACD;AAED,OAAM,SAAUQ,WAAV,CAAsBR,GAAtB,EAAiC;EACrC,IAAMS,QAAQ,GAAGR,QAAQ,CAACD,GAAD,CAAR,CAAcS,QAA/B;EACA,OAAOA,QAAQ,CAAC,CAAD,CAAR,KAAgB,GAAhB,GAAsBA,QAAtB,GAAiC,MAAIA,QAA5C;AACD;AAED,OAAM,SAAUC,SAAV,CAAoBV,GAApB,EAA+B;EACnC,OAAOC,QAAQ,CAACD,GAAD,CAAR,CAAcW,MAArB;AACD;AAED,OAAM,SAAUC,OAAV,CAAkBZ,GAAlB,EAA6B;EACjC,OAAOC,QAAQ,CAACD,GAAD,CAAR,CAAca,IAArB;AACD;AAED,OAAM,SAAUZ,QAAV,CAAmBD,GAAnB,EAAgCc,IAAhC,EAA6C;EACjD,IAAIC,iBAAiB,EAArB,EAAyB;IACvB,OAAOD,IAAI,KAAKE,SAAT,GAAqB,IAAIC,GAAJ,CAAQjB,GAAR,EAAac,IAAb,CAArB,GAA0C,IAAIG,GAAJ,CAAQjB,GAAR,CAAjD;EACD;;EACD,IAAIc,IAAI,KAAKE,SAAT,IAAsB,CAAC,IAAIE,IAAJ,CAASlB,GAAT,CAA3B,EAA0C;IACxC,MAAM,IAAImB,KAAJ,CAAU,mBAAiBnB,GAAjB,GAAoB,GAA9B,CAAN;EACD;;EACD,IAAIoB,GAAG,GAAGC,QAAV;EACA,IAAMC,aAAa,GAAGF,GAAG,CAACG,aAAJ,CAAkB,GAAlB,CAAtB;;EACA,IAAIT,IAAI,KAAKE,SAAb,EAAwB;IACtBI,GAAG,GAAGC,QAAQ,CAACG,cAAT,CAAwBC,kBAAxB,CAA2C,EAA3C,CAAN;IACA,IAAMC,WAAW,GAAGN,GAAG,CAACG,aAAJ,CAAkB,MAAlB,CAApB;IACAG,WAAW,CAACxB,IAAZ,GAAmBY,IAAnB;IACAM,GAAG,CAACO,IAAJ,CAASC,WAAT,CAAqBF,WAArB;IACAN,GAAG,CAACS,IAAJ,CAASD,WAAT,CAAqBN,aAArB;EACD;;EACDA,aAAa,CAACpB,IAAd,GAAqBF,GAArB;EACA,OAAOsB,aAAP;AACD;AAED,IAAIQ,cAAJ;;AACA,SAASf,iBAAT,GAA0B;EACxB,IAAIe,cAAc,KAAKd,SAAvB,EAAkC;IAChC,OAAOc,cAAP;EACD;;EACD,IAAI;IACF,IAAM9B,GAAG,GAAG,IAAIiB,GAAJ,CAAQ,kBAAR,CAAZ;IACAa,cAAc,GAAG9B,GAAG,CAACE,IAAJ,KAAa,kBAA9B;IACA,OAAO4B,cAAP;EACD,CAJD,CAIE,WAAM;IACNA,cAAc,GAAG,KAAjB;EACD;;EACD,OAAOA,cAAP;AACD","names":["getLinkElementOrigin","getLocationOrigin","normalizeUrl","url","buildUrl","href","isValidUrl","haveSameOrigin","url1","url2","getOrigin","getPathName","pathname","getSearch","search","getHash","hash","base","checkURLSupported","undefined","URL","test","Error","doc","document","anchorElement","createElement","implementation","createHTMLDocument","baseElement","head","appendChild","body","isURLSupported"],"sourceRoot":"","sources":["../../src/tools/urlPolyfill.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}