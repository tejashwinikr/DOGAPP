{"ast":null,"code":"import { __assign } from \"tslib\";\nimport { BuildMode } from '../../boot/init';\nimport { createEndpointBuilder, ENDPOINTS_TYPES, INTAKE_SITE_US } from './endpointBuilder';\nexport function computeTransportConfiguration(initConfiguration, buildEnv, isIntakeV2Enabled) {\n  var endpointBuilder = createEndpointBuilder(initConfiguration, buildEnv, isIntakeV2Enabled);\n  var intakeUrls = ENDPOINTS_TYPES.map(function (endpointType) {\n    return endpointBuilder.buildIntakeUrl(endpointType);\n  });\n  var configuration = {\n    isIntakeUrl: function isIntakeUrl(url) {\n      return intakeUrls.some(function (intakeUrl) {\n        return url.indexOf(intakeUrl) === 0;\n      });\n    },\n    logsEndpoint: endpointBuilder.build('logs'),\n    rumEndpoint: endpointBuilder.build('rum'),\n    sessionReplayEndpoint: endpointBuilder.build('sessionReplay')\n  };\n\n  if (initConfiguration.internalMonitoringApiKey) {\n    configuration.internalMonitoringEndpoint = endpointBuilder.build('logs', 'browser-agent-internal-monitoring');\n  }\n\n  if (buildEnv.buildMode === BuildMode.E2E_TEST) {\n    configuration.internalMonitoringEndpoint = '<<< E2E INTERNAL MONITORING ENDPOINT >>>';\n    configuration.logsEndpoint = '<<< E2E LOGS ENDPOINT >>>';\n    configuration.rumEndpoint = '<<< E2E RUM ENDPOINT >>>';\n    configuration.sessionReplayEndpoint = '<<< E2E SESSION REPLAY ENDPOINT >>>';\n  }\n\n  if (buildEnv.buildMode === BuildMode.STAGING && initConfiguration.replica !== undefined) {\n    var replicaConfiguration = __assign(__assign({}, initConfiguration), {\n      site: INTAKE_SITE_US,\n      applicationId: initConfiguration.replica.applicationId,\n      clientToken: initConfiguration.replica.clientToken,\n      useAlternateIntakeDomains: true,\n      intakeApiVersion: isIntakeV2Enabled ? 2 : 1\n    });\n\n    var replicaEndpointBuilder_1 = createEndpointBuilder(replicaConfiguration, buildEnv, isIntakeV2Enabled);\n    configuration.replica = {\n      applicationId: initConfiguration.replica.applicationId,\n      internalMonitoringEndpoint: replicaEndpointBuilder_1.build('logs', 'browser-agent-internal-monitoring'),\n      logsEndpoint: replicaEndpointBuilder_1.build('logs'),\n      rumEndpoint: replicaEndpointBuilder_1.build('rum')\n    };\n    var replicaIntakeUrls = ENDPOINTS_TYPES.map(function (endpointType) {\n      return replicaEndpointBuilder_1.buildIntakeUrl(endpointType);\n    });\n    replicaIntakeUrls.forEach(function (replicaIntakeUrl) {\n      return intakeUrls.push(replicaIntakeUrl);\n    });\n    intakeUrls.push.apply(intakeUrls, replicaIntakeUrls);\n  }\n\n  return configuration;\n}","map":{"version":3,"mappings":";AAAA,SAAmBA,SAAnB,QAAoC,iBAApC;AAEA,SAASC,qBAAT,EAAgCC,eAAhC,EAAiDC,cAAjD,QAAuE,mBAAvE;AAoBA,OAAM,SAAUC,6BAAV,CACJC,iBADI,EAEJC,QAFI,EAGJC,iBAHI,EAGuB;EAE3B,IAAMC,eAAe,GAAGP,qBAAqB,CAACI,iBAAD,EAAoBC,QAApB,EAA8BC,iBAA9B,CAA7C;EACA,IAAME,UAAU,GAAaP,eAAe,CAACQ,GAAhB,CAAoB,UAACC,YAAD,EAAa;IAAK,sBAAe,CAACC,cAAhB,CAA+BD,YAA/B;EAA4C,CAAlF,CAA7B;EAEA,IAAME,aAAa,GAA2B;IAC5CC,WAAW,EAAE,qBAACC,GAAD,EAAY;MAAK,iBAAU,CAACC,IAAX,CAAgB,UAACC,SAAD,EAAU;QAAK,UAAG,CAACC,OAAJ,CAAYD,SAAZ,MAA2B,CAA3B;MAA4B,CAA3D;IAA4D,CAD9C;IAE5CE,YAAY,EAAEX,eAAe,CAACY,KAAhB,CAAsB,MAAtB,CAF8B;IAG5CC,WAAW,EAAEb,eAAe,CAACY,KAAhB,CAAsB,KAAtB,CAH+B;IAI5CE,qBAAqB,EAAEd,eAAe,CAACY,KAAhB,CAAsB,eAAtB;EAJqB,CAA9C;;EAOA,IAAIf,iBAAiB,CAACkB,wBAAtB,EAAgD;IAC9CV,aAAa,CAACW,0BAAd,GAA2ChB,eAAe,CAACY,KAAhB,CAAsB,MAAtB,EAA8B,mCAA9B,CAA3C;EACD;;EAED,IAAId,QAAQ,CAACmB,SAAT,KAAuBzB,SAAS,CAAC0B,QAArC,EAA+C;IAC7Cb,aAAa,CAACW,0BAAd,GAA2C,0CAA3C;IACAX,aAAa,CAACM,YAAd,GAA6B,2BAA7B;IACAN,aAAa,CAACQ,WAAd,GAA4B,0BAA5B;IACAR,aAAa,CAACS,qBAAd,GAAsC,qCAAtC;EACD;;EAED,IAAIhB,QAAQ,CAACmB,SAAT,KAAuBzB,SAAS,CAAC2B,OAAjC,IAA4CtB,iBAAiB,CAACuB,OAAlB,KAA8BC,SAA9E,EAAyF;IACvF,IAAMC,oBAAoB,yBACrBzB,iBADqB,GACJ;MACpB0B,IAAI,EAAE5B,cADc;MAEpB6B,aAAa,EAAE3B,iBAAiB,CAACuB,OAAlB,CAA0BI,aAFrB;MAGpBC,WAAW,EAAE5B,iBAAiB,CAACuB,OAAlB,CAA0BK,WAHnB;MAIpBC,yBAAyB,EAAE,IAJP;MAKpBC,gBAAgB,EAAE5B,iBAAiB,GAAG,CAAH,GAAQ;IALvB,CADI,CAA1B;;IAQA,IAAM6B,wBAAsB,GAAGnC,qBAAqB,CAAC6B,oBAAD,EAAuBxB,QAAvB,EAAiCC,iBAAjC,CAApD;IAEAM,aAAa,CAACe,OAAd,GAAwB;MACtBI,aAAa,EAAE3B,iBAAiB,CAACuB,OAAlB,CAA0BI,aADnB;MAEtBR,0BAA0B,EAAEY,wBAAsB,CAAChB,KAAvB,CAA6B,MAA7B,EAAqC,mCAArC,CAFN;MAGtBD,YAAY,EAAEiB,wBAAsB,CAAChB,KAAvB,CAA6B,MAA7B,CAHQ;MAItBC,WAAW,EAAEe,wBAAsB,CAAChB,KAAvB,CAA6B,KAA7B;IAJS,CAAxB;IAOA,IAAMiB,iBAAiB,GAAGnC,eAAe,CAACQ,GAAhB,CAAoB,UAACC,YAAD,EAAa;MAAK,+BAAsB,CAACC,cAAvB,CAAsCD,YAAtC;IAAmD,CAAzF,CAA1B;IACA0B,iBAAiB,CAACC,OAAlB,CAA0B,UAACC,gBAAD,EAAiB;MAAK,iBAAU,CAACC,IAAX,CAAgBD,gBAAhB;IAAiC,CAAjF;IACA9B,UAAU,CAAC+B,IAAX,CAAeC,KAAf,aAAmBJ,iBAAnB;EACD;;EAED,OAAOxB,aAAP;AACD","names":["BuildMode","createEndpointBuilder","ENDPOINTS_TYPES","INTAKE_SITE_US","computeTransportConfiguration","initConfiguration","buildEnv","isIntakeV2Enabled","endpointBuilder","intakeUrls","map","endpointType","buildIntakeUrl","configuration","isIntakeUrl","url","some","intakeUrl","indexOf","logsEndpoint","build","rumEndpoint","sessionReplayEndpoint","internalMonitoringApiKey","internalMonitoringEndpoint","buildMode","E2E_TEST","STAGING","replica","undefined","replicaConfiguration","site","applicationId","clientToken","useAlternateIntakeDomains","intakeApiVersion","replicaEndpointBuilder_1","replicaIntakeUrls","forEach","replicaIntakeUrl","push","apply"],"sourceRoot":"","sources":["../../../src/domain/configuration/transportConfiguration.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}