{"ast":null,"code":"import { toValidEntry } from './resourceUtils';\n/**\n * Look for corresponding timing in resource timing buffer\n *\n * Observations:\n * - Timing (start, end) are nested inside the request (start, end)\n * - Some timing can be not exactly nested, being off by < 1 ms\n * - Browsers generate a timing entry for OPTIONS request\n *\n * Strategy:\n * - from valid nested entries (with 1 ms error margin)\n * - if a single timing match, return the timing\n * - if two following timings match (OPTIONS request), return the timing for the actual request\n * - otherwise we can't decide, return undefined\n */\n\nexport function matchRequestTiming(request) {\n  if (!performance || !('getEntriesByName' in performance)) {\n    return;\n  }\n\n  var sameNameEntries = performance.getEntriesByName(request.url, 'resource');\n\n  if (!sameNameEntries.length || !('toJSON' in sameNameEntries[0])) {\n    return;\n  }\n\n  var candidates = sameNameEntries.map(function (entry) {\n    return entry.toJSON();\n  }).filter(toValidEntry).filter(function (entry) {\n    return isBetween(entry, request.startClocks.relative, endTime({\n      startTime: request.startClocks.relative,\n      duration: request.duration\n    }));\n  });\n\n  if (candidates.length === 1) {\n    return candidates[0];\n  }\n\n  if (candidates.length === 2 && firstCanBeOptionRequest(candidates)) {\n    return candidates[1];\n  }\n\n  return;\n}\n\nfunction firstCanBeOptionRequest(correspondingEntries) {\n  return endTime(correspondingEntries[0]) <= correspondingEntries[1].startTime;\n}\n\nfunction endTime(timing) {\n  // eslint-disable-next-line @typescript-eslint/restrict-plus-operands\n  return timing.startTime + timing.duration;\n}\n\nfunction isBetween(timing, start, end) {\n  var errorMargin = 1; // eslint-disable-next-line @typescript-eslint/restrict-plus-operands\n\n  return timing.startTime >= start - errorMargin && endTime(timing) <= end + errorMargin;\n}","map":{"version":3,"mappings":"AAGA,SAASA,YAAT,QAA6B,iBAA7B;AAOA;;;;;;;;;;;;;;;AAcA,OAAM,SAAUC,kBAAV,CAA6BC,OAA7B,EAA0D;EAC9D,IAAI,CAACC,WAAD,IAAgB,EAAE,sBAAsBA,WAAxB,CAApB,EAA0D;IACxD;EACD;;EACD,IAAMC,eAAe,GAAGD,WAAW,CAACE,gBAAZ,CAA6BH,OAAO,CAACI,GAArC,EAA0C,UAA1C,CAAxB;;EAEA,IAAI,CAACF,eAAe,CAACG,MAAjB,IAA2B,EAAE,YAAYH,eAAe,CAAC,CAAD,CAA7B,CAA/B,EAAkE;IAChE;EACD;;EAED,IAAMI,UAAU,GAAGJ,eAAe,CAC/BK,GADgB,CACZ,UAACC,KAAD,EAAM;IAAK,YAAK,CAACC,MAAN;EAA8C,CAD7C,EAEhBC,MAFgB,CAETZ,YAFS,EAGhBY,MAHgB,CAGT,UAACF,KAAD,EAAM;IACZ,gBAAS,CACPA,KADO,EAEPR,OAAO,CAACW,WAAR,CAAoBC,QAFb,EAGPC,OAAO,CAAC;MAAEC,SAAS,EAAEd,OAAO,CAACW,WAAR,CAAoBC,QAAjC;MAA2CG,QAAQ,EAAEf,OAAO,CAACe;IAA7D,CAAD,CAHA,CAAT;EAIC,CARc,CAAnB;;EAWA,IAAIT,UAAU,CAACD,MAAX,KAAsB,CAA1B,EAA6B;IAC3B,OAAOC,UAAU,CAAC,CAAD,CAAjB;EACD;;EAED,IAAIA,UAAU,CAACD,MAAX,KAAsB,CAAtB,IAA2BW,uBAAuB,CAACV,UAAD,CAAtD,EAAoE;IAClE,OAAOA,UAAU,CAAC,CAAD,CAAjB;EACD;;EAED;AACD;;AAED,SAASU,uBAAT,CAAiCC,oBAAjC,EAAqF;EACnF,OAAOJ,OAAO,CAACI,oBAAoB,CAAC,CAAD,CAArB,CAAP,IAAoCA,oBAAoB,CAAC,CAAD,CAApB,CAAwBH,SAAnE;AACD;;AAED,SAASD,OAAT,CAAiBK,MAAjB,EAA+B;EAC7B;EACA,OAAQA,MAAM,CAACJ,SAAP,GAAmBI,MAAM,CAACH,QAAlC;AACD;;AAED,SAASI,SAAT,CAAmBD,MAAnB,EAAmCE,KAAnC,EAAwDC,GAAxD,EAAyE;EACvE,IAAMC,WAAW,GAAG,CAApB,CADuE,CAEvE;;EACA,OAAOJ,MAAM,CAACJ,SAAP,IAAoBM,KAAK,GAAGE,WAA5B,IAA2CT,OAAO,CAACK,MAAD,CAAP,IAAmBG,GAAG,GAAGC,WAA3E;AACD","names":["toValidEntry","matchRequestTiming","request","performance","sameNameEntries","getEntriesByName","url","length","candidates","map","entry","toJSON","filter","startClocks","relative","endTime","startTime","duration","firstCanBeOptionRequest","correspondingEntries","timing","isBetween","start","end","errorMargin"],"sourceRoot":"","sources":["../../../../src/domain/rumEventsCollection/resource/matchRequestTiming.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}