{"ast":null,"code":"import { monitor, ONE_MINUTE, SESSION_TIME_OUT_DELAY, relativeNow } from '@datadog/browser-core';\nimport { LifeCycleEventType } from './lifeCycle';\nexport var VIEW_CONTEXT_TIME_OUT_DELAY = SESSION_TIME_OUT_DELAY;\nexport var ACTION_CONTEXT_TIME_OUT_DELAY = 5 * ONE_MINUTE; // arbitrary\n\nexport var CLEAR_OLD_CONTEXTS_INTERVAL = ONE_MINUTE;\nexport function startParentContexts(lifeCycle, session) {\n  var currentView;\n  var currentAction;\n  var currentSessionId;\n  var previousViews = [];\n  var previousActions = [];\n  lifeCycle.subscribe(LifeCycleEventType.VIEW_CREATED, function (currentContext) {\n    currentView = currentContext;\n    currentSessionId = session.getId();\n  });\n  lifeCycle.subscribe(LifeCycleEventType.VIEW_UPDATED, function (currentContext) {\n    // A view can be updated after its end.  We have to ensure that the view being updated is the\n    // most recently created.\n    if (currentView && currentView.id === currentContext.id) {\n      currentView = currentContext;\n    }\n  });\n  lifeCycle.subscribe(LifeCycleEventType.VIEW_ENDED, function (_a) {\n    var endClocks = _a.endClocks;\n\n    if (currentView) {\n      previousViews.unshift({\n        endTime: endClocks.relative,\n        context: buildCurrentViewContext(),\n        startTime: currentView.startClocks.relative\n      });\n      currentView = undefined;\n    }\n  });\n  lifeCycle.subscribe(LifeCycleEventType.AUTO_ACTION_CREATED, function (currentContext) {\n    currentAction = currentContext;\n  });\n  lifeCycle.subscribe(LifeCycleEventType.AUTO_ACTION_COMPLETED, function (action) {\n    if (currentAction) {\n      previousActions.unshift({\n        context: buildCurrentActionContext(),\n        // eslint-disable-next-line @typescript-eslint/restrict-plus-operands\n        endTime: currentAction.startClocks.relative + action.duration,\n        startTime: currentAction.startClocks.relative\n      });\n    }\n\n    currentAction = undefined;\n  });\n  lifeCycle.subscribe(LifeCycleEventType.AUTO_ACTION_DISCARDED, function () {\n    currentAction = undefined;\n  });\n  lifeCycle.subscribe(LifeCycleEventType.SESSION_RENEWED, function () {\n    previousViews = [];\n    previousActions = [];\n    currentView = undefined;\n    currentAction = undefined;\n  });\n  var clearOldContextsInterval = setInterval(monitor(function () {\n    clearOldContexts(previousViews, VIEW_CONTEXT_TIME_OUT_DELAY);\n    clearOldContexts(previousActions, ACTION_CONTEXT_TIME_OUT_DELAY);\n  }), CLEAR_OLD_CONTEXTS_INTERVAL);\n\n  function clearOldContexts(previousContexts, timeOutDelay) {\n    var oldTimeThreshold = relativeNow() - timeOutDelay;\n\n    while (previousContexts.length > 0 && previousContexts[previousContexts.length - 1].startTime < oldTimeThreshold) {\n      previousContexts.pop();\n    }\n  }\n\n  function buildCurrentViewContext() {\n    return {\n      session: {\n        id: currentSessionId\n      },\n      view: {\n        id: currentView.id,\n        name: currentView.name,\n        referrer: currentView.referrer,\n        url: currentView.location.href\n      }\n    };\n  }\n\n  function buildCurrentActionContext() {\n    return {\n      action: {\n        id: currentAction.id\n      }\n    };\n  }\n\n  function findContext(buildContext, previousContexts, currentContext, startTime) {\n    if (startTime === undefined) {\n      return currentContext ? buildContext() : undefined;\n    }\n\n    if (currentContext && startTime >= currentContext.startClocks.relative) {\n      return buildContext();\n    }\n\n    for (var _i = 0, previousContexts_1 = previousContexts; _i < previousContexts_1.length; _i++) {\n      var previousContext = previousContexts_1[_i];\n\n      if (startTime > previousContext.endTime) {\n        break;\n      }\n\n      if (startTime >= previousContext.startTime) {\n        return previousContext.context;\n      }\n    }\n\n    return undefined;\n  }\n\n  return {\n    findAction: function findAction(startTime) {\n      return findContext(buildCurrentActionContext, previousActions, currentAction, startTime);\n    },\n    findView: function findView(startTime) {\n      return findContext(buildCurrentViewContext, previousViews, currentView, startTime);\n    },\n    stop: function stop() {\n      clearInterval(clearOldContextsInterval);\n    }\n  };\n}","map":{"version":3,"mappings":"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","names":["monitor","ONE_MINUTE","SESSION_TIME_OUT_DELAY","relativeNow","LifeCycleEventType","VIEW_CONTEXT_TIME_OUT_DELAY","ACTION_CONTEXT_TIME_OUT_DELAY","CLEAR_OLD_CONTEXTS_INTERVAL","startParentContexts","lifeCycle","session","currentView","currentAction","currentSessionId","previousViews","previousActions","subscribe","VIEW_CREATED","currentContext","getId","VIEW_UPDATED","id","VIEW_ENDED","_a","endClocks","unshift","endTime","relative","context","buildCurrentViewContext","startTime","startClocks","undefined","AUTO_ACTION_CREATED","AUTO_ACTION_COMPLETED","action","buildCurrentActionContext","duration","AUTO_ACTION_DISCARDED","SESSION_RENEWED","clearOldContextsInterval","setInterval","clearOldContexts","previousContexts","timeOutDelay","oldTimeThreshold","length","pop","view","name","referrer","url","location","href","findContext","buildContext","_i","previousContext","findAction","findView","stop","clearInterval"],"sourceRoot":"","sources":["../../src/domain/parentContexts.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}