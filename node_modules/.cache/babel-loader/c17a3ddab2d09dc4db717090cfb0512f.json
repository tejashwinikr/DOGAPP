{"ast":null,"code":"import { __spreadArrays } from \"tslib\";\nimport { display } from '../tools/display';\nimport { addEventListener, jsonStringify, noop, objectValues } from '../tools/utils';\nimport { monitor } from '../domain/internalMonitoring'; // https://en.wikipedia.org/wiki/UTF-8\n\nvar HAS_MULTI_BYTES_CHARACTERS = /[^\\u0000-\\u007F]/;\n\nvar Batch =\n/** @class */\nfunction () {\n  function Batch(request, maxSize, bytesLimit, maxMessageSize, flushTimeout, beforeUnloadCallback) {\n    if (beforeUnloadCallback === void 0) {\n      beforeUnloadCallback = noop;\n    }\n\n    this.request = request;\n    this.maxSize = maxSize;\n    this.bytesLimit = bytesLimit;\n    this.maxMessageSize = maxMessageSize;\n    this.flushTimeout = flushTimeout;\n    this.beforeUnloadCallback = beforeUnloadCallback;\n    this.pushOnlyBuffer = [];\n    this.upsertBuffer = {};\n    this.bufferBytesSize = 0;\n    this.bufferMessageCount = 0;\n    this.flushOnVisibilityHidden();\n    this.flushPeriodically();\n  }\n\n  Batch.prototype.add = function (message) {\n    this.addOrUpdate(message);\n  };\n\n  Batch.prototype.upsert = function (message, key) {\n    this.addOrUpdate(message, key);\n  };\n\n  Batch.prototype.flush = function () {\n    if (this.bufferMessageCount !== 0) {\n      var messages = __spreadArrays(this.pushOnlyBuffer, objectValues(this.upsertBuffer));\n\n      this.request.send(messages.join('\\n'), this.bufferBytesSize);\n      this.pushOnlyBuffer = [];\n      this.upsertBuffer = {};\n      this.bufferBytesSize = 0;\n      this.bufferMessageCount = 0;\n    }\n  };\n\n  Batch.prototype.sizeInBytes = function (candidate) {\n    // Accurate byte size computations can degrade performances when there is a lot of events to process\n    if (!HAS_MULTI_BYTES_CHARACTERS.test(candidate)) {\n      return candidate.length;\n    }\n\n    if (window.TextEncoder !== undefined) {\n      return new TextEncoder().encode(candidate).length;\n    }\n\n    return new Blob([candidate]).size;\n  };\n\n  Batch.prototype.addOrUpdate = function (message, key) {\n    var _a = this.process(message),\n        processedMessage = _a.processedMessage,\n        messageBytesSize = _a.messageBytesSize;\n\n    if (messageBytesSize >= this.maxMessageSize) {\n      display.warn(\"Discarded a message whose size was bigger than the maximum allowed size \" + this.maxMessageSize + \"KB.\");\n      return;\n    }\n\n    if (this.hasMessageFor(key)) {\n      this.remove(key);\n    }\n\n    if (this.willReachedBytesLimitWith(messageBytesSize)) {\n      this.flush();\n    }\n\n    this.push(processedMessage, messageBytesSize, key);\n\n    if (this.isFull()) {\n      this.flush();\n    }\n  };\n\n  Batch.prototype.process = function (message) {\n    var processedMessage = jsonStringify(message);\n    var messageBytesSize = this.sizeInBytes(processedMessage);\n    return {\n      processedMessage: processedMessage,\n      messageBytesSize: messageBytesSize\n    };\n  };\n\n  Batch.prototype.push = function (processedMessage, messageBytesSize, key) {\n    if (this.bufferMessageCount > 0) {\n      // \\n separator at serialization\n      this.bufferBytesSize += 1;\n    }\n\n    if (key !== undefined) {\n      this.upsertBuffer[key] = processedMessage;\n    } else {\n      this.pushOnlyBuffer.push(processedMessage);\n    }\n\n    this.bufferBytesSize += messageBytesSize;\n    this.bufferMessageCount += 1;\n  };\n\n  Batch.prototype.remove = function (key) {\n    var removedMessage = this.upsertBuffer[key];\n    delete this.upsertBuffer[key];\n    var messageBytesSize = this.sizeInBytes(removedMessage);\n    this.bufferBytesSize -= messageBytesSize;\n    this.bufferMessageCount -= 1;\n\n    if (this.bufferMessageCount > 0) {\n      this.bufferBytesSize -= 1;\n    }\n  };\n\n  Batch.prototype.hasMessageFor = function (key) {\n    return key !== undefined && this.upsertBuffer[key] !== undefined;\n  };\n\n  Batch.prototype.willReachedBytesLimitWith = function (messageBytesSize) {\n    // byte of the separator at the end of the message\n    return this.bufferBytesSize + messageBytesSize + 1 >= this.bytesLimit;\n  };\n\n  Batch.prototype.isFull = function () {\n    return this.bufferMessageCount === this.maxSize || this.bufferBytesSize >= this.bytesLimit;\n  };\n\n  Batch.prototype.flushPeriodically = function () {\n    var _this = this;\n\n    setTimeout(monitor(function () {\n      _this.flush();\n\n      _this.flushPeriodically();\n    }), this.flushTimeout);\n  };\n\n  Batch.prototype.flushOnVisibilityHidden = function () {\n    var _this = this;\n    /**\n     * With sendBeacon, requests are guaranteed to be successfully sent during document unload\n     */\n    // @ts-ignore this function is not always defined\n\n\n    if (navigator.sendBeacon) {\n      /**\n       * beforeunload is called before visibilitychange\n       * register first to be sure to be called before flush on beforeunload\n       * caveat: unload can still be canceled by another listener\n       */\n      addEventListener(window, \"beforeunload\"\n      /* BEFORE_UNLOAD */\n      , this.beforeUnloadCallback);\n      /**\n       * Only event that guarantee to fire on mobile devices when the page transitions to background state\n       * (e.g. when user switches to a different application, goes to homescreen, etc), or is being unloaded.\n       */\n\n      addEventListener(document, \"visibilitychange\"\n      /* VISIBILITY_CHANGE */\n      , function () {\n        if (document.visibilityState === 'hidden') {\n          _this.flush();\n        }\n      });\n      /**\n       * Safari does not support yet to send a request during:\n       * - a visibility change during doc unload (cf: https://bugs.webkit.org/show_bug.cgi?id=194897)\n       * - a page hide transition (cf: https://bugs.webkit.org/show_bug.cgi?id=188329)\n       */\n\n      addEventListener(window, \"beforeunload\"\n      /* BEFORE_UNLOAD */\n      , function () {\n        return _this.flush();\n      });\n    }\n  };\n\n  return Batch;\n}();\n\nexport { Batch };","map":{"version":3,"mappings":"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","names":["display","addEventListener","jsonStringify","noop","objectValues","monitor","HAS_MULTI_BYTES_CHARACTERS","request","maxSize","bytesLimit","maxMessageSize","flushTimeout","beforeUnloadCallback","flushOnVisibilityHidden","flushPeriodically","Batch","message","addOrUpdate","key","bufferMessageCount","messages","pushOnlyBuffer","upsertBuffer","send","join","bufferBytesSize","candidate","test","length","window","TextEncoder","undefined","encode","Blob","size","process","processedMessage","messageBytesSize","warn","hasMessageFor","remove","willReachedBytesLimitWith","flush","push","isFull","sizeInBytes","removedMessage","setTimeout","_this","navigator","sendBeacon","document","visibilityState"],"sourceRoot":"","sources":["../../src/transport/batch.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}