{"ast":null,"code":"import { monitor } from '@datadog/browser-core';\nexport function createDOMMutationObservable() {\n  var callbacks = [];\n  var MutationObserver = getMutationObserverConstructor();\n  var observer = MutationObserver ? new MutationObserver(monitor(notify)) : undefined;\n\n  function notify() {\n    callbacks.forEach(function (callback) {\n      return callback();\n    });\n  }\n\n  function startDOMObservation() {\n    if (!observer) {\n      return;\n    }\n\n    observer.observe(document, {\n      attributes: true,\n      characterData: true,\n      childList: true,\n      subtree: true\n    });\n  }\n\n  function stopDOMObservation() {\n    if (!observer) {\n      return;\n    }\n\n    observer.disconnect();\n  }\n\n  return {\n    subscribe: function subscribe(callback) {\n      if (!callbacks.length) {\n        startDOMObservation();\n      }\n\n      callbacks.push(callback);\n      return {\n        unsubscribe: function unsubscribe() {\n          callbacks = callbacks.filter(function (other) {\n            return callback !== other;\n          });\n\n          if (!callbacks.length) {\n            stopDOMObservation();\n          }\n        }\n      };\n    }\n  };\n}\nexport function getMutationObserverConstructor() {\n  var constructor;\n  var browserWindow = window; // Angular uses Zone.js to provide a context persisting accross async tasks.  Zone.js replaces the\n  // global MutationObserver constructor with a patched version to support the context propagation.\n  // There is an ongoing issue[1][2] with this setup when using a MutationObserver within a Angular\n  // component: on some occasions, the callback is being called in an infinite loop, causing the\n  // page to freeze (even if the callback is completely empty).\n  //\n  // To work around this issue, we are using the Zone __symbol__ API to get the original, unpatched\n  // MutationObserver constructor.\n  //\n  // [1] https://github.com/angular/angular/issues/26948\n  // [2] https://github.com/angular/angular/issues/31712\n\n  if (browserWindow.Zone) {\n    var symbol = browserWindow.Zone.__symbol__('MutationObserver');\n\n    constructor = browserWindow[symbol];\n  }\n\n  if (!constructor) {\n    constructor = browserWindow.MutationObserver;\n  }\n\n  return constructor;\n}","map":{"version":3,"mappings":"AAAA,SAASA,OAAT,QAAsC,uBAAtC;AAMA,OAAM,SAAUC,2BAAV,GAAqC;EACzC,IAAIC,SAAS,GAAsB,EAAnC;EACA,IAAMC,gBAAgB,GAAGC,8BAA8B,EAAvD;EACA,IAAMC,QAAQ,GAAGF,gBAAgB,GAAG,IAAIA,gBAAJ,CAAqBH,OAAO,CAACM,MAAD,CAA5B,CAAH,GAA2CC,SAA5E;;EAEA,SAASD,MAAT,GAAe;IACbJ,SAAS,CAACM,OAAV,CAAkB,UAACC,QAAD,EAAS;MAAK,eAAQ,EAAR;IAAU,CAA1C;EACD;;EAED,SAASC,mBAAT,GAA4B;IAC1B,IAAI,CAACL,QAAL,EAAe;MACb;IACD;;IAEDA,QAAQ,CAACM,OAAT,CAAiBC,QAAjB,EAA2B;MACzBC,UAAU,EAAE,IADa;MAEzBC,aAAa,EAAE,IAFU;MAGzBC,SAAS,EAAE,IAHc;MAIzBC,OAAO,EAAE;IAJgB,CAA3B;EAMD;;EAED,SAASC,kBAAT,GAA2B;IACzB,IAAI,CAACZ,QAAL,EAAe;MACb;IACD;;IAEDA,QAAQ,CAACa,UAAT;EACD;;EAED,OAAO;IACLC,SAAS,EAAE,mBAACV,QAAD,EAAS;MAClB,IAAI,CAACP,SAAS,CAACkB,MAAf,EAAuB;QACrBV,mBAAmB;MACpB;;MAEDR,SAAS,CAACmB,IAAV,CAAeZ,QAAf;MACA,OAAO;QACLa,WAAW,EAAE;UACXpB,SAAS,GAAGA,SAAS,CAACqB,MAAV,CAAiB,UAACC,KAAD,EAAM;YAAK,eAAQ,KAAKA,KAAb;UAAkB,CAA9C,CAAZ;;UAEA,IAAI,CAACtB,SAAS,CAACkB,MAAf,EAAuB;YACrBH,kBAAkB;UACnB;QACF;MAPI,CAAP;IASD;EAhBI,CAAP;AAkBD;AAUD,OAAM,SAAUb,8BAAV,GAAwC;EAC5C,IAAIqB,WAAJ;EACA,IAAMC,aAAa,GAAkBC,MAArC,CAF4C,CAI5C;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EACA,IAAID,aAAa,CAACE,IAAlB,EAAwB;IACtB,IAAMC,MAAM,GAAGH,aAAa,CAACE,IAAd,CAAmBE,UAAnB,CAA8B,kBAA9B,CAAf;;IACAL,WAAW,GAAGC,aAAa,CAACG,MAAD,CAA3B;EACD;;EAED,IAAI,CAACJ,WAAL,EAAkB;IAChBA,WAAW,GAAGC,aAAa,CAACvB,gBAA5B;EACD;;EAED,OAAOsB,WAAP;AACD","names":["monitor","createDOMMutationObservable","callbacks","MutationObserver","getMutationObserverConstructor","observer","notify","undefined","forEach","callback","startDOMObservation","observe","document","attributes","characterData","childList","subtree","stopDOMObservation","disconnect","subscribe","length","push","unsubscribe","filter","other","constructor","browserWindow","window","Zone","symbol","__symbol__"],"sourceRoot":"","sources":["../../src/browser/domMutationObservable.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}