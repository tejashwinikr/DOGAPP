{"ast":null,"code":"import { deepClone, getType } from './utils';\n/**\n * Current limitation:\n * - field path do not support array, 'a.b.c' only\n */\n\nexport function limitModification(object, modifiableFieldPaths, modifier) {\n  var clone = deepClone(object);\n  var result = modifier(clone);\n  modifiableFieldPaths.forEach(function (path) {\n    var originalValue = get(object, path);\n    var newValue = get(clone, path);\n    var originalType = getType(originalValue);\n    var newType = getType(newValue);\n\n    if (newType === originalType) {\n      set(object, path, newValue);\n    } else if (originalType === 'object' && (newType === 'undefined' || newType === 'null')) {\n      set(object, path, {});\n    }\n  });\n  return result;\n}\n\nfunction get(object, path) {\n  var current = object;\n\n  for (var _i = 0, _a = path.split('.'); _i < _a.length; _i++) {\n    var field = _a[_i];\n\n    if (!isValidObjectContaining(current, field)) {\n      return;\n    }\n\n    current = current[field];\n  }\n\n  return current;\n}\n\nfunction set(object, path, value) {\n  var current = object;\n  var fields = path.split('.');\n\n  for (var i = 0; i < fields.length; i += 1) {\n    var field = fields[i];\n\n    if (!isValidObjectContaining(current, field)) {\n      return;\n    }\n\n    if (i !== fields.length - 1) {\n      current = current[field];\n    } else {\n      current[field] = value;\n    }\n  }\n}\n\nfunction isValidObjectContaining(object, field) {\n  return typeof object === 'object' && object !== null && field in object;\n}","map":{"version":3,"mappings":"AACA,SAASA,SAAT,EAAoBC,OAApB,QAAmC,SAAnC;AAEA;;;;;AAIA,OAAM,SAAUC,iBAAV,CACJC,MADI,EAEJC,oBAFI,EAGJC,QAHI,EAG2B;EAE/B,IAAMC,KAAK,GAAGN,SAAS,CAACG,MAAD,CAAvB;EACA,IAAMI,MAAM,GAAGF,QAAQ,CAACC,KAAD,CAAvB;EACAF,oBAAoB,CAACI,OAArB,CAA6B,UAACC,IAAD,EAAK;IAChC,IAAMC,aAAa,GAAGC,GAAG,CAACR,MAAD,EAASM,IAAT,CAAzB;IACA,IAAMG,QAAQ,GAAGD,GAAG,CAACL,KAAD,EAAQG,IAAR,CAApB;IACA,IAAMI,YAAY,GAAGZ,OAAO,CAACS,aAAD,CAA5B;IACA,IAAMI,OAAO,GAAGb,OAAO,CAACW,QAAD,CAAvB;;IACA,IAAIE,OAAO,KAAKD,YAAhB,EAA8B;MAC5BE,GAAG,CAACZ,MAAD,EAASM,IAAT,EAAeG,QAAf,CAAH;IACD,CAFD,MAEO,IAAIC,YAAY,KAAK,QAAjB,KAA8BC,OAAO,KAAK,WAAZ,IAA2BA,OAAO,KAAK,MAArE,CAAJ,EAAkF;MACvFC,GAAG,CAACZ,MAAD,EAASM,IAAT,EAAe,EAAf,CAAH;IACD;EACF,CAVD;EAWA,OAAOF,MAAP;AACD;;AAED,SAASI,GAAT,CAAaR,MAAb,EAA8BM,IAA9B,EAA0C;EACxC,IAAIO,OAAO,GAAGb,MAAd;;EACA,KAAoB,qBAAI,CAACc,KAAL,CAAW,GAAX,CAApB,EAAoBC,cAApB,EAAoBA,IAApB,EAAqC;IAAhC,IAAMC,KAAK,SAAX;;IACH,IAAI,CAACC,uBAAuB,CAACJ,OAAD,EAAUG,KAAV,CAA5B,EAA8C;MAC5C;IACD;;IACDH,OAAO,GAAGA,OAAO,CAACG,KAAD,CAAjB;EACD;;EACD,OAAOH,OAAP;AACD;;AAED,SAASD,GAAT,CAAaZ,MAAb,EAA8BM,IAA9B,EAA4CY,KAA5C,EAA0D;EACxD,IAAIL,OAAO,GAAGb,MAAd;EACA,IAAMmB,MAAM,GAAGb,IAAI,CAACQ,KAAL,CAAW,GAAX,CAAf;;EACA,KAAK,IAAIM,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,MAAM,CAACE,MAA3B,EAAmCD,CAAC,IAAI,CAAxC,EAA2C;IACzC,IAAMJ,KAAK,GAAGG,MAAM,CAACC,CAAD,CAApB;;IACA,IAAI,CAACH,uBAAuB,CAACJ,OAAD,EAAUG,KAAV,CAA5B,EAA8C;MAC5C;IACD;;IACD,IAAII,CAAC,KAAKD,MAAM,CAACE,MAAP,GAAgB,CAA1B,EAA6B;MAC3BR,OAAO,GAAGA,OAAO,CAACG,KAAD,CAAjB;IACD,CAFD,MAEO;MACLH,OAAO,CAACG,KAAD,CAAP,GAAiBE,KAAjB;IACD;EACF;AACF;;AAED,SAASD,uBAAT,CAAiCjB,MAAjC,EAAkDgB,KAAlD,EAA+D;EAC7D,OAAO,OAAOhB,MAAP,KAAkB,QAAlB,IAA8BA,MAAM,KAAK,IAAzC,IAAiDgB,KAAK,IAAIhB,MAAjE;AACD","names":["deepClone","getType","limitModification","object","modifiableFieldPaths","modifier","clone","result","forEach","path","originalValue","get","newValue","originalType","newType","set","current","split","_i","field","isValidObjectContaining","value","fields","i","length"],"sourceRoot":"","sources":["../../src/tools/limitModification.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}