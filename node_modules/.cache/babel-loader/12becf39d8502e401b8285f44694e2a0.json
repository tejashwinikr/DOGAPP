{"ast":null,"code":"import { __assign } from \"tslib\";\nimport { getCurrentSite } from '../../browser/cookie';\nimport { catchUserErrors } from '../../tools/catchUserErrors';\nimport { includes, objectHasValue, ONE_KILO_BYTE, ONE_SECOND } from '../../tools/utils';\nimport { computeTransportConfiguration } from './transportConfiguration';\nexport var InitialPrivacyLevel = {\n  ALLOW: 'allow',\n  MASK: 'mask',\n  MASK_FORMS_ONLY: 'mask-forms-only'\n};\nexport var DEFAULT_CONFIGURATION = {\n  allowedTracingOrigins: [],\n  maxErrorsByMinute: 3000,\n  maxInternalMonitoringMessagesPerPage: 15,\n  sampleRate: 100,\n  replaySampleRate: 100,\n  silentMultipleInit: false,\n  trackInteractions: false,\n  trackViewsManually: false,\n  initialPrivacyLevel: InitialPrivacyLevel.ALLOW,\n\n  /**\n   * arbitrary value, byte precision not needed\n   */\n  requestErrorResponseLengthLimit: 32 * ONE_KILO_BYTE,\n\n  /**\n   * flush automatically, aim to be lower than ALB connection timeout\n   * to maximize connection reuse.\n   */\n  flushTimeout: 30 * ONE_SECOND,\n\n  /**\n   * Logs intake limit\n   */\n  maxBatchSize: 50,\n  maxMessageSize: 256 * ONE_KILO_BYTE,\n\n  /**\n   * beacon payload max queue size implementation is 64kb\n   * ensure that we leave room for logs, rum and potential other users\n   */\n  batchBytesLimit: 16 * ONE_KILO_BYTE\n};\nexport function buildConfiguration(initConfiguration, buildEnv) {\n  var enableExperimentalFeatures = Array.isArray(initConfiguration.enableExperimentalFeatures) ? initConfiguration.enableExperimentalFeatures : [];\n\n  var isEnabled = function isEnabled(feature) {\n    return includes(enableExperimentalFeatures, feature);\n  };\n\n  var configuration = __assign(__assign({\n    beforeSend: initConfiguration.beforeSend && catchUserErrors(initConfiguration.beforeSend, 'beforeSend threw an error:'),\n    cookieOptions: buildCookieOptions(initConfiguration),\n    isEnabled: isEnabled,\n    service: initConfiguration.service\n  }, computeTransportConfiguration(initConfiguration, buildEnv, isEnabled('support-intake-v2'))), DEFAULT_CONFIGURATION);\n\n  if ('allowedTracingOrigins' in initConfiguration) {\n    configuration.allowedTracingOrigins = initConfiguration.allowedTracingOrigins;\n  }\n\n  if ('sampleRate' in initConfiguration) {\n    configuration.sampleRate = initConfiguration.sampleRate;\n  }\n\n  if ('replaySampleRate' in initConfiguration) {\n    configuration.replaySampleRate = initConfiguration.replaySampleRate;\n  }\n\n  if ('trackInteractions' in initConfiguration) {\n    configuration.trackInteractions = !!initConfiguration.trackInteractions;\n  }\n\n  if ('trackViewsManually' in initConfiguration) {\n    configuration.trackViewsManually = !!initConfiguration.trackViewsManually;\n  }\n\n  if ('actionNameAttribute' in initConfiguration) {\n    configuration.actionNameAttribute = initConfiguration.actionNameAttribute;\n  }\n\n  if (configuration.isEnabled('initial-privacy-level-option') && objectHasValue(InitialPrivacyLevel, initConfiguration.initialPrivacyLevel)) {\n    configuration.initialPrivacyLevel = initConfiguration.initialPrivacyLevel;\n  }\n\n  return configuration;\n}\nexport function buildCookieOptions(initConfiguration) {\n  var cookieOptions = {};\n  cookieOptions.secure = mustUseSecureCookie(initConfiguration);\n  cookieOptions.crossSite = !!initConfiguration.useCrossSiteSessionCookie;\n\n  if (!!initConfiguration.trackSessionAcrossSubdomains) {\n    cookieOptions.domain = getCurrentSite();\n  }\n\n  return cookieOptions;\n}\n\nfunction mustUseSecureCookie(initConfiguration) {\n  return !!initConfiguration.useSecureSessionCookie || !!initConfiguration.useCrossSiteSessionCookie;\n}","map":{"version":3,"mappings":"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","names":["getCurrentSite","catchUserErrors","includes","objectHasValue","ONE_KILO_BYTE","ONE_SECOND","computeTransportConfiguration","InitialPrivacyLevel","ALLOW","MASK","MASK_FORMS_ONLY","DEFAULT_CONFIGURATION","allowedTracingOrigins","maxErrorsByMinute","maxInternalMonitoringMessagesPerPage","sampleRate","replaySampleRate","silentMultipleInit","trackInteractions","trackViewsManually","initialPrivacyLevel","requestErrorResponseLengthLimit","flushTimeout","maxBatchSize","maxMessageSize","batchBytesLimit","buildConfiguration","initConfiguration","buildEnv","enableExperimentalFeatures","Array","isArray","isEnabled","feature","configuration","beforeSend","cookieOptions","buildCookieOptions","service","actionNameAttribute","secure","mustUseSecureCookie","crossSite","useCrossSiteSessionCookie","trackSessionAcrossSubdomains","domain","useSecureSessionCookie"],"sourceRoot":"","sources":["../../../src/domain/configuration/configuration.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}