{"ast":null,"code":"import { RequestType, startFetchProxy, startXhrProxy } from '@datadog/browser-core';\nimport { LifeCycleEventType } from './lifeCycle';\nimport { isAllowedRequestUrl } from './rumEventsCollection/resource/resourceUtils';\nimport { startTracer } from './tracing/tracer';\nvar nextRequestIndex = 1;\nexport function startRequestCollection(lifeCycle, configuration) {\n  var tracer = startTracer(configuration);\n  trackXhr(lifeCycle, configuration, tracer);\n  trackFetch(lifeCycle, configuration, tracer);\n}\nexport function trackXhr(lifeCycle, configuration, tracer) {\n  var xhrProxy = startXhrProxy();\n  xhrProxy.beforeSend(function (context, xhr) {\n    if (isAllowedRequestUrl(configuration, context.url)) {\n      tracer.traceXhr(context, xhr);\n      context.requestIndex = getNextRequestIndex();\n      lifeCycle.notify(LifeCycleEventType.REQUEST_STARTED, {\n        requestIndex: context.requestIndex\n      });\n    }\n  });\n  xhrProxy.onRequestComplete(function (context) {\n    if (isAllowedRequestUrl(configuration, context.url)) {\n      tracer.clearTracingIfNeeded(context);\n      lifeCycle.notify(LifeCycleEventType.REQUEST_COMPLETED, {\n        duration: context.duration,\n        method: context.method,\n        requestIndex: context.requestIndex,\n        responseText: context.responseText,\n        spanId: context.spanId,\n        startClocks: context.startClocks,\n        status: context.status,\n        traceId: context.traceId,\n        type: RequestType.XHR,\n        url: context.url,\n        xhr: context.xhr\n      });\n    }\n  });\n  return xhrProxy;\n}\nexport function trackFetch(lifeCycle, configuration, tracer) {\n  var fetchProxy = startFetchProxy();\n  fetchProxy.beforeSend(function (context) {\n    if (isAllowedRequestUrl(configuration, context.url)) {\n      tracer.traceFetch(context);\n      context.requestIndex = getNextRequestIndex();\n      lifeCycle.notify(LifeCycleEventType.REQUEST_STARTED, {\n        requestIndex: context.requestIndex\n      });\n    }\n  });\n  fetchProxy.onRequestComplete(function (context) {\n    if (isAllowedRequestUrl(configuration, context.url)) {\n      tracer.clearTracingIfNeeded(context);\n      lifeCycle.notify(LifeCycleEventType.REQUEST_COMPLETED, {\n        duration: context.duration,\n        method: context.method,\n        requestIndex: context.requestIndex,\n        responseText: context.responseText,\n        responseType: context.responseType,\n        spanId: context.spanId,\n        startClocks: context.startClocks,\n        status: context.status,\n        traceId: context.traceId,\n        type: RequestType.FETCH,\n        url: context.url,\n        response: context.response,\n        init: context.init,\n        input: context.input\n      });\n    }\n  });\n  return fetchProxy;\n}\n\nfunction getNextRequestIndex() {\n  var result = nextRequestIndex;\n  nextRequestIndex += 1;\n  return result;\n}","map":{"version":3,"mappings":"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","names":["RequestType","startFetchProxy","startXhrProxy","LifeCycleEventType","isAllowedRequestUrl","startTracer","nextRequestIndex","startRequestCollection","lifeCycle","configuration","tracer","trackXhr","trackFetch","xhrProxy","beforeSend","context","xhr","url","traceXhr","requestIndex","getNextRequestIndex","notify","REQUEST_STARTED","onRequestComplete","clearTracingIfNeeded","REQUEST_COMPLETED","duration","method","responseText","spanId","startClocks","status","traceId","type","XHR","fetchProxy","traceFetch","responseType","FETCH","response","init","input","result"],"sourceRoot":"","sources":["../../src/domain/requestCollection.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}