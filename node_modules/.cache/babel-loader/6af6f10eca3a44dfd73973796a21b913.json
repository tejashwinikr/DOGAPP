{"ast":null,"code":"import { __spreadArrays } from \"tslib\";\nimport { combine, createErrorFilter, isEmptyObject, limitModification, timeStampNow, currentDrift, display, addMonitoringMessage, relativeNow } from '@datadog/browser-core';\nimport { RumEventType } from '../rawRumEvent.types';\nimport { LifeCycleEventType } from './lifeCycle';\nimport { RumSessionPlan } from './rumSession';\nvar SessionType;\n\n(function (SessionType) {\n  SessionType[\"SYNTHETICS\"] = \"synthetics\";\n  SessionType[\"USER\"] = \"user\";\n})(SessionType || (SessionType = {}));\n\nvar VIEW_EVENTS_MODIFIABLE_FIELD_PATHS = [// Fields with sensitive data\n'view.url', 'view.referrer', 'action.target.name', 'error.message', 'error.stack', 'error.resource.url', 'resource.url'];\n\nvar OTHER_EVENTS_MODIFIABLE_FIELD_PATHS = __spreadArrays(VIEW_EVENTS_MODIFIABLE_FIELD_PATHS, [// User-customizable field\n'context']);\n\nexport function startRumAssembly(applicationId, configuration, lifeCycle, session, parentContexts, getCommonContext) {\n  var errorFilter = createErrorFilter(configuration, function (error) {\n    lifeCycle.notify(LifeCycleEventType.RAW_ERROR_COLLECTED, {\n      error: error\n    });\n  });\n  lifeCycle.subscribe(LifeCycleEventType.RAW_RUM_EVENT_COLLECTED, function (_a) {\n    var startTime = _a.startTime,\n        rawRumEvent = _a.rawRumEvent,\n        domainContext = _a.domainContext,\n        savedCommonContext = _a.savedCommonContext,\n        customerContext = _a.customerContext;\n    var viewContext = parentContexts.findView(startTime);\n\n    if (session.isTracked() && viewContext && viewContext.session.id === session.getId()) {\n      var actionContext = parentContexts.findAction(startTime);\n      var commonContext = savedCommonContext || getCommonContext();\n      var rumContext = {\n        _dd: {\n          format_version: 2,\n          drift: currentDrift(),\n          session: {\n            plan: session.hasReplayPlan() ? RumSessionPlan.REPLAY : RumSessionPlan.LITE\n          }\n        },\n        application: {\n          id: applicationId\n        },\n        date: timeStampNow(),\n        service: configuration.service,\n        session: {\n          // must be computed on each event because synthetics instrumentation can be done after sdk execution\n          type: getSessionType()\n        },\n        synthetics: getSyntheticsContext()\n      };\n      var serverRumEvent = needToAssembleWithAction(rawRumEvent) ? combine(rumContext, viewContext, actionContext, rawRumEvent) : combine(rumContext, viewContext, rawRumEvent);\n      serverRumEvent.context = combine(commonContext.context, customerContext);\n\n      if (!('has_replay' in serverRumEvent.session)) {\n        ;\n        serverRumEvent.session.has_replay = commonContext.hasReplay;\n      }\n\n      if (!isEmptyObject(commonContext.user)) {\n        ;\n        serverRumEvent.usr = commonContext.user;\n      }\n\n      if (shouldSend(serverRumEvent, configuration.beforeSend, domainContext, errorFilter)) {\n        if (isEmptyObject(serverRumEvent.context)) {\n          delete serverRumEvent.context;\n        }\n\n        if (typeof serverRumEvent.date !== 'number') {\n          addMonitoringMessage('invalid date', {\n            debug: {\n              eventType: serverRumEvent.type,\n              eventTimeStamp: serverRumEvent.date,\n              eventRelativeTime: Math.round(startTime),\n              timeStampNow: timeStampNow(),\n              relativeNow: Math.round(relativeNow()),\n              drift: currentDrift()\n            }\n          });\n        }\n\n        lifeCycle.notify(LifeCycleEventType.RUM_EVENT_COLLECTED, serverRumEvent);\n      }\n    }\n  });\n}\n\nfunction shouldSend(event, beforeSend, domainContext, errorFilter) {\n  if (beforeSend) {\n    var result = limitModification(event, event.type === RumEventType.VIEW ? VIEW_EVENTS_MODIFIABLE_FIELD_PATHS : OTHER_EVENTS_MODIFIABLE_FIELD_PATHS, function (event) {\n      return beforeSend(event, domainContext);\n    });\n\n    if (result === false && event.type !== RumEventType.VIEW) {\n      return false;\n    }\n\n    if (result === false) {\n      display.warn(\"Can't dismiss view events using beforeSend!\");\n    }\n  }\n\n  if (event.type === RumEventType.ERROR) {\n    return !errorFilter.isLimitReached();\n  }\n\n  return true;\n}\n\nfunction needToAssembleWithAction(event) {\n  return [RumEventType.ERROR, RumEventType.RESOURCE, RumEventType.LONG_TASK].indexOf(event.type) !== -1;\n}\n\nfunction getSessionType() {\n  return navigator.userAgent.indexOf('DatadogSynthetics') === -1 && !getSyntheticsContext() ? SessionType.USER : SessionType.SYNTHETICS;\n}\n\nfunction getSyntheticsContext() {\n  var testId = window._DATADOG_SYNTHETICS_PUBLIC_ID;\n  var resultId = window._DATADOG_SYNTHETICS_RESULT_ID;\n\n  if (typeof testId === 'string' && typeof resultId === 'string') {\n    return {\n      test_id: testId,\n      result_id: resultId\n    };\n  }\n}","map":{"version":3,"mappings":"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","names":["combine","createErrorFilter","isEmptyObject","limitModification","timeStampNow","currentDrift","display","addMonitoringMessage","relativeNow","RumEventType","LifeCycleEventType","RumSessionPlan","SessionType","VIEW_EVENTS_MODIFIABLE_FIELD_PATHS","OTHER_EVENTS_MODIFIABLE_FIELD_PATHS","startRumAssembly","applicationId","configuration","lifeCycle","session","parentContexts","getCommonContext","errorFilter","error","notify","RAW_ERROR_COLLECTED","subscribe","RAW_RUM_EVENT_COLLECTED","_a","startTime","rawRumEvent","domainContext","savedCommonContext","customerContext","viewContext","findView","isTracked","id","getId","actionContext","findAction","commonContext","rumContext","_dd","format_version","drift","plan","hasReplayPlan","REPLAY","LITE","application","date","service","type","getSessionType","synthetics","getSyntheticsContext","serverRumEvent","needToAssembleWithAction","context","has_replay","hasReplay","user","usr","shouldSend","beforeSend","debug","eventType","eventTimeStamp","eventRelativeTime","Math","round","RUM_EVENT_COLLECTED","event","result","VIEW","warn","ERROR","isLimitReached","RESOURCE","LONG_TASK","indexOf","navigator","userAgent","USER","SYNTHETICS","testId","window","_DATADOG_SYNTHETICS_PUBLIC_ID","resultId","_DATADOG_SYNTHETICS_RESULT_ID","test_id","result_id"],"sourceRoot":"","sources":["../../src/domain/assembly.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}