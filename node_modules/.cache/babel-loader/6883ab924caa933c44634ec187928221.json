{"ast":null,"code":"import { runOnReadyState } from '@datadog/browser-core';\nimport { LifeCycleEventType } from '@datadog/browser-rum-core';\nimport { getReplayStats } from '../domain/replayStats';\nexport function makeRecorderApi(startRecordingImpl) {\n  var state = {\n    status: 0\n    /* Stopped */\n\n  };\n\n  var startStrategy = function startStrategy() {\n    state = {\n      status: 1\n      /* IntentToStart */\n\n    };\n  };\n\n  var stopStrategy = function stopStrategy() {\n    state = {\n      status: 0\n      /* Stopped */\n\n    };\n  };\n\n  return {\n    start: function start() {\n      return startStrategy();\n    },\n    stop: function stop() {\n      return stopStrategy();\n    },\n    getReplayStats: getReplayStats,\n    onRumStart: function onRumStart(lifeCycle, initConfiguration, configuration, session, parentContexts) {\n      lifeCycle.subscribe(LifeCycleEventType.SESSION_EXPIRED, function () {\n        if (state.status === 2\n        /* Starting */\n        || state.status === 3\n        /* Started */\n        ) {\n          stopStrategy();\n          state = {\n            status: 1\n            /* IntentToStart */\n\n          };\n        }\n      });\n      lifeCycle.subscribe(LifeCycleEventType.SESSION_RENEWED, function () {\n        if (state.status === 1\n        /* IntentToStart */\n        ) {\n          startStrategy();\n        }\n      });\n\n      startStrategy = function startStrategy() {\n        if (!session.hasReplayPlan()) {\n          state = {\n            status: 1\n            /* IntentToStart */\n\n          };\n          return;\n        }\n\n        if (state.status === 2\n        /* Starting */\n        || state.status === 3\n        /* Started */\n        ) {\n          return;\n        }\n\n        state = {\n          status: 2\n          /* Starting */\n\n        };\n        runOnReadyState('complete', function () {\n          if (state.status !== 2\n          /* Starting */\n          ) {\n            return;\n          }\n\n          var stopRecording = startRecordingImpl(lifeCycle, initConfiguration.applicationId, configuration, session, parentContexts).stop;\n          state = {\n            status: 3\n            /* Started */\n            ,\n            stopRecording: stopRecording\n          };\n        });\n      };\n\n      stopStrategy = function stopStrategy() {\n        if (state.status === 0\n        /* Stopped */\n        ) {\n          return;\n        }\n\n        if (state.status === 3\n        /* Started */\n        ) {\n          state.stopRecording();\n        }\n\n        state = {\n          status: 0\n          /* Stopped */\n\n        };\n      };\n\n      if (state.status === 1\n      /* IntentToStart */\n      ) {\n        startStrategy();\n      }\n    },\n    isRecording: function isRecording() {\n      return state.status === 3\n      /* Started */\n      ;\n    }\n  };\n}","map":{"version":3,"mappings":"AAAA,SAAwBA,eAAxB,QAA+C,uBAA/C;AACA,SACEC,kBADF,QAOO,2BAPP;AAQA,SAASC,cAAT,QAA+B,uBAA/B;AAgCA,OAAM,SAAUC,eAAV,CAA0BC,kBAA1B,EAA4D;EAChE,IAAIC,KAAK,GAAkB;IACzBC,MAAM;IAAA;;EADmB,CAA3B;;EAIA,IAAIC,aAAa,GAAG;IAClBF,KAAK,GAAG;MAAEC,MAAM;MAAA;;IAAR,CAAR;EACD,CAFD;;EAGA,IAAIE,YAAY,GAAG;IACjBH,KAAK,GAAG;MAAEC,MAAM;MAAA;;IAAR,CAAR;EACD,CAFD;;EAGA,OAAO;IACLG,KAAK,EAAE;MAAM,oBAAa,EAAb;IAAe,CADvB;IAELC,IAAI,EAAE;MAAM,mBAAY,EAAZ;IAAc,CAFrB;IAGLR,cAAc,gBAHT;IAKLS,UAAU,EAAE,oBACVC,SADU,EAEVC,iBAFU,EAGVC,aAHU,EAIVC,OAJU,EAKVC,cALU,EAKoB;MAE9BJ,SAAS,CAACK,SAAV,CAAoBhB,kBAAkB,CAACiB,eAAvC,EAAwD;QACtD,IAAIb,KAAK,CAACC,MAAN,KAAY;QAAA;QAAZ,GAA4CD,KAAK,CAACC,MAAN,KAAY;QAAA;QAA5D,EAAyF;UACvFE,YAAY;UACZH,KAAK,GAAG;YAAEC,MAAM;YAAA;;UAAR,CAAR;QACD;MACF,CALD;MAOAM,SAAS,CAACK,SAAV,CAAoBhB,kBAAkB,CAACkB,eAAvC,EAAwD;QACtD,IAAId,KAAK,CAACC,MAAN,KAAY;QAAA;QAAhB,EAAmD;UACjDC,aAAa;QACd;MACF,CAJD;;MAMAA,aAAa,GAAG;QACd,IAAI,CAACQ,OAAO,CAACK,aAAR,EAAL,EAA8B;UAC5Bf,KAAK,GAAG;YAAEC,MAAM;YAAA;;UAAR,CAAR;UACA;QACD;;QAED,IAAID,KAAK,CAACC,MAAN,KAAY;QAAA;QAAZ,GAA4CD,KAAK,CAACC,MAAN,KAAY;QAAA;QAA5D,EAAyF;UACvF;QACD;;QAEDD,KAAK,GAAG;UAAEC,MAAM;UAAA;;QAAR,CAAR;QAEAN,eAAe,CAAC,UAAD,EAAa;UAC1B,IAAIK,KAAK,CAACC,MAAN,KAAY;UAAA;UAAhB,EAA8C;YAC5C;UACD;;UAEO,IAAMe,aAAa,GAAKjB,kBAAkB,CAChDQ,SADgD,EAEhDC,iBAAiB,CAACS,aAF8B,EAGhDR,aAHgD,EAIhDC,OAJgD,EAKhDC,cALgD,CAAlB,CAM/BN,IANO;UAORL,KAAK,GAAG;YACNC,MAAM;YAAA;YADA;YAENe,aAAa;UAFP,CAAR;QAID,CAhBc,CAAf;MAiBD,CA7BD;;MA+BAb,YAAY,GAAG;QACb,IAAIH,KAAK,CAACC,MAAN,KAAY;QAAA;QAAhB,EAA6C;UAC3C;QACD;;QAED,IAAID,KAAK,CAACC,MAAN,KAAY;QAAA;QAAhB,EAA6C;UAC3CD,KAAK,CAACgB,aAAN;QACD;;QAEDhB,KAAK,GAAG;UACNC,MAAM;UAAA;;QADA,CAAR;MAGD,CAZD;;MAcA,IAAID,KAAK,CAACC,MAAN,KAAY;MAAA;MAAhB,EAAmD;QACjDC,aAAa;MACd;IACF,CAzEI;IA2ELgB,WAAW,EAAE;MAAM,YAAK,CAACjB,MAAN,KAAY;MAAA;MAAZ;IAAuC;EA3ErD,CAAP;AA6ED","names":["runOnReadyState","LifeCycleEventType","getReplayStats","makeRecorderApi","startRecordingImpl","state","status","startStrategy","stopStrategy","start","stop","onRumStart","lifeCycle","initConfiguration","configuration","session","parentContexts","subscribe","SESSION_EXPIRED","SESSION_RENEWED","hasReplayPlan","stopRecording","applicationId","isRecording"],"sourceRoot":"","sources":["../../src/boot/recorderApi.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}