"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.getSleepDuration = exports.trackSleep = exports.SLEEP_THRESHOLD = exports.SLEEP_CHECK_DELAY = void 0;
var browser_core_1 = require("@datadog/browser-core");
exports.SLEEP_CHECK_DELAY = browser_core_1.ONE_SECOND;
exports.SLEEP_THRESHOLD = browser_core_1.ONE_MINUTE;
var sleepPeriods;
var lastWoke;
function trackSleep() {
    lastWoke = browser_core_1.timeStampNow();
    sleepPeriods = [];
    var intervalId = setInterval(browser_core_1.monitor(checkSleep), exports.SLEEP_CHECK_DELAY);
    return { stop: function () { return clearInterval(intervalId); } };
}
exports.trackSleep = trackSleep;
function getSleepDuration(since) {
    if (!sleepPeriods) {
        return 0;
    }
    checkSleep();
    var filteredPeriods;
    if (since === undefined) {
        filteredPeriods = sleepPeriods;
    }
    else {
        filteredPeriods = sleepPeriods.filter(function (period) { return period.end >= since; });
    }
    return filteredPeriods.reduce(function (total, period) { return total + (period.end - period.start); }, 0);
}
exports.getSleepDuration = getSleepDuration;
function checkSleep() {
    if (lastWoke === undefined || !sleepPeriods) {
        return;
    }
    var now = browser_core_1.timeStampNow();
    if (now - lastWoke >= exports.SLEEP_THRESHOLD) {
        sleepPeriods.push({ start: lastWoke, end: now });
    }
    lastWoke = now;
}
//# sourceMappingURL=trackSleep.js.map