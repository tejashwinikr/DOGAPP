import { Configuration, InternalMonitoring } from '@datadog/browser-core';
import { LifeCycle } from '../domain/lifeCycle';
import { RumSession } from '../domain/rumSession';
import { CommonContext } from '../rawRumEvent.types';
import { RecorderApi, RumInitConfiguration } from './rumPublicApi';
export declare function startRum(initConfiguration: RumInitConfiguration, configuration: Configuration, internalMonitoring: InternalMonitoring, getCommonContext: () => CommonContext, recorderApi: RecorderApi, initialViewName?: string): {
    addAction: (action: import("../domain/rumEventsCollection/action/trackActions").CustomAction, savedCommonContext?: CommonContext | undefined) => void;
    addError: ({ error, handlingStack, startClocks, context: customerContext }: import("../domain/rumEventsCollection/error/errorCollection").ProvidedError, savedCommonContext?: CommonContext | undefined) => void;
    addTiming: (name: string, time?: import("@datadog/browser-core").TimeStamp) => void;
    startView: (name?: string | undefined, startClocks?: import("@datadog/browser-core").ClocksState | undefined) => void;
    lifeCycle: LifeCycle;
    parentContexts: import("../domain/parentContexts").ParentContexts;
    session: RumSession;
    getInternalContext: (startTime?: number | undefined) => import("../rawRumEvent.types").InternalContext | undefined;
};
export declare function startRumEventCollection(applicationId: string, lifeCycle: LifeCycle, configuration: Configuration, session: RumSession, getCommonContext: () => CommonContext): {
    parentContexts: import("../domain/parentContexts").ParentContexts;
    foregroundContexts: import("../domain/foregroundContexts").ForegroundContexts;
    stop: () => void;
};
