import { monitor, ONE_MINUTE, ONE_SECOND, timeStampNow } from '@datadog/browser-core';
export var SLEEP_CHECK_DELAY = ONE_SECOND;
export var SLEEP_THRESHOLD = ONE_MINUTE;
var sleepPeriods;
var lastWoke;
export function trackSleep() {
    lastWoke = timeStampNow();
    sleepPeriods = [];
    var intervalId = setInterval(monitor(checkSleep), SLEEP_CHECK_DELAY);
    return { stop: function () { return clearInterval(intervalId); } };
}
export function getSleepDuration(since) {
    if (!sleepPeriods) {
        return 0;
    }
    checkSleep();
    var filteredPeriods;
    if (since === undefined) {
        filteredPeriods = sleepPeriods;
    }
    else {
        filteredPeriods = sleepPeriods.filter(function (period) { return period.end >= since; });
    }
    return filteredPeriods.reduce(function (total, period) { return total + (period.end - period.start); }, 0);
}
function checkSleep() {
    if (lastWoke === undefined || !sleepPeriods) {
        return;
    }
    var now = timeStampNow();
    if (now - lastWoke >= SLEEP_THRESHOLD) {
        sleepPeriods.push({ start: lastWoke, end: now });
    }
    lastWoke = now;
}
//# sourceMappingURL=trackSleep.js.map